{
  "version": 3,
  "sources": ["../node_server/server_settings.js", "../node_modules/fragelement/DOMElement.js", "../node_modules/acyclicgraph/acyclicgraph.js", "../src/components/acyclicgraph/graph.node.js", "../src/components/acyclicgraph/acyclic.graph.js", "../src/components/canvas/canvas.node.js", "../src/components/input/button.node.js", "../src/components/input/input.node.js", "../src/components/template/component.js", "../src/components/logger/logger.node.js", "../src/components/server/socket.component.js", "../src/components/server/sse.component.js", "../src/components/canvas/circlecanvas.node.js", "../node_modules/dynamicparticles/DynamicParticles.js", "../src/components/space/space.node.js", "../src/components/space/physicsbody.node.js", "../src/components/popups/planet_tag.js", "../src/components/space/planets/planet.earth.js", "../src/components/space/planets/planet.python.js", "../src/components/space/planets/planet.nodejs.js", "../src/components/space/planets/planet.maker.js", "../src/components/popups/portfolio_window.js", "../src/components/space/planets/planet.javascript.js", "../src/components/space/planets/planet.startup.js", "../src/components/nav/topnav.component.js"],
  "sourcesContent": ["const settings = {\r\n    debug:false, //print debog messages?\r\n    protocol:'http', //'http' or 'https'. HTTPS required for Nodejs <---> Python sockets. If using http, set production to False in python/server.py as well\r\n    host: 'localhost', //'localhost' or '127.0.0.1' etc.\r\n    port: 8080, //e.g. port 80, 443, 8000\r\n    socket_protocol: 'ws', //frontend socket protocol, wss for served, ws for localhost\r\n    hotreload: 5000, //hotreload websocket server port\r\n    python: 7000,  //quart server port\r\n    python_node:7001, //websocket relay port (relays messages to client from nodejs that were sent to it by python)\r\n    startpage: 'src/index.html',  //home page\r\n    errpage: 'src/other/404.html', //error page, etc.\r\n    certpath:'node_server/ssl/cert.pem',//if using https, this is required. See cert.pfx.md for instructions\r\n    keypath:'node_server/ssl/key.pem'//if using https, this is required. See cert.pfx.md for instructions\r\n}\r\n\r\nexports.settings = settings;", "\r\nexport class DOMElement extends HTMLElement { \r\n\r\n    template = (props) => {\r\n        return `<div> Custom Fragment Props: ${JSON.stringify(props)} </div>`\r\n    }; //override the default template string by extending the class, or use options.template if calling the base class\r\n    props = {test:true};\r\n    useShadow = false; //can set to attach a shadow DOM instead (local styles)\r\n  \r\n    oncreate=undefined //(props) => {}  fires on element creation (e.g. to set up logic)\r\n    onresize=undefined //(props) => {} fires on window resize\r\n    ondelete=undefined //(props) => {} fires after element is deleted\r\n    onchanged=undefined //(props) => {} fires when props change\r\n\r\n    FRAGMENT = undefined;\r\n    attachedShadow = false;\r\n\r\n    obsAttributes=[\"props\",\"options\",\"onchanged\",\"onresize\",\"ondelete\",\"oncreate\",\"template\"]\r\n \r\n    get observedAttributes() {\r\n        return this.obsAttributes;\r\n    }\r\n\r\n    get obsAttributes() {\r\n        return this.obsAttributes;\r\n    }\r\n\r\n    set obsAttributes(att) {\r\n        if(typeof att === 'string') {\r\n            this.obsAttributes.push(att);\r\n        } else if (Array.isArray(att)) this.obsAttributes=att;\r\n    }\r\n\r\n    static get tag(){return this.name.toLowerCase()+'-'} //tagName, default 'classname-'. Set as a static variable for the internal addElement to reference\r\n\r\n    //add self or a specified class to the window which can be used via html like <custom-tag></custom-tag>\r\n    //will default be the classname with a '-' at the end if no tag supplied\r\n    static addElement(tag=this.tag,cls=this,extend=undefined) {\r\n        addCustomElement(cls,tag,extend);\r\n    }\r\n\r\n    attributeChangedCallback(name, old, val) {\r\n        if(name === 'onchanged') {\r\n            let onchanged = val;\r\n            if(typeof onchanged === 'string') onchanged = parseFunctionFromText(onchanged);\r\n            if(typeof onchanged === 'function') { \r\n                this.onchanged =  onchanged;\r\n                this.state.data.props = this.props;\r\n                this.state.unsubscribeTrigger('props'); //remove any previous subs\r\n                this.state.subscribeTrigger('props',this.onchanged);\r\n                let changed = new CustomEvent('changed', {detail: { props:this.props }});\r\n                this.state.subscribeTrigger('props',()=>{this.dispatchEvent(changed)});\r\n            }\r\n        }\r\n        else if(name === 'onresize') {\r\n            let onresize = val;\r\n            if(typeof onresize === 'string')  onresize = parseFunctionFromText(onresize);\r\n            if(typeof onresize === 'function') {\r\n                if(this.ONRESIZE) {\r\n                    try { window.removeEventListener('resize',this.ONRESIZE); } catch(err) {}\r\n                }\r\n                this.ONRESIZE = (ev) => { this.onresize(this.props); } \r\n                this.onresize = onresize;\r\n                window.addEventListener('resize',this.ONRESIZE);\r\n            }\r\n        }\r\n        else if(name === 'ondelete') {\r\n            let ondelete = val;\r\n            if(typeof ondelete === 'string') ondelete = parseFunctionFromText(ondelete);\r\n            if(typeof ondelete === 'function') { \r\n                this.ondelete = () => {\r\n                    if(this.ONRESIZE) window.removeEventListener('resize',this.ONRESIZE);\r\n                    this.state.unsubscribeTrigger('props');\r\n                    if(ondelete) ondelete(this.props);\r\n                }\r\n            }\r\n        }\r\n        else if(name === 'oncreate') { \r\n            let oncreate = val;\r\n            if(typeof oncreate === 'string') oncreate = parseFunctionFromText(oncreate);\r\n            if(typeof oncreate === 'function') { \r\n                this.oncreate = oncreate;\r\n            }\r\n        }\r\n        else if(name === 'props') { //update the props, fires any onchanged stuff\r\n            let newProps = val;\r\n            if(typeof newProps === 'string') newProps = JSON.parse(newProps);\r\n\r\n            Object.assign(this.props,newProps);\r\n            this.state.setState({props:this.props});\r\n        }\r\n        else if(name === 'template') { //change the html template\r\n\r\n            let template = val;\r\n\r\n            this.template = options.template; //function or string;\r\n\r\n            if(typeof template === 'function') this.templateString = this.template(this.props); //can pass a function\r\n            else this.templateString = template;\r\n            \r\n            //render the new template\r\n            this.render(this.props);\r\n            let created = new CustomEvent('created', {detail: { props:this.props }});\r\n            this.dispatchEvent(created);\r\n\r\n        }\r\n        else { //arbitrary attributes\r\n            let parsed = val;\r\n            if(name.includes('eval_')) { // e.g. <custom-  eval_loginput=\"(input)=>{console.log(input);}\"></custom-> //now elm.loginput(input) should work\r\n                name = name.split('_')\r\n                name.shift()\r\n                name = name.join();\r\n                parsed = parseFunctionFromText(val);  \r\n            }\r\n            else if (typeof val === 'string') {\r\n                try {\r\n                    parsed = JSON.parse(val)\r\n                } catch (err) {\r\n                    parsed = val;\r\n                }\r\n            }\r\n            this[name] = parsed; // set arbitrary props \r\n            this.props[name] = parsed; //reflect it in the props object (to set props via attributes more easily)\r\n            //this.props[name] = val; //set arbitrary props via attributes\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n\r\n        // set initial props\r\n        let newProps = this.getAttribute('props');\r\n        if(typeof newProps === 'string') newProps = JSON.parse(newProps);\r\n\r\n        Object.assign(this.props,newProps);\r\n        this.state.setState({props:this.props});\r\n\r\n        //Observe arbitrary attributes\r\n        Array.from(this.attributes).forEach((att) => {\r\n            let name = att.name;\r\n            //console.log(name,this.getAttribute(name),this[name])\r\n            //get/set/observe arbitrary attributes\r\n            let parsed = att.value;\r\n            if(name.includes('eval_')) { // e.g. <custom-  eval_loginput=\"(input)=>{console.log(input);}\"></custom-> //now elm.loginput(input) should work\r\n                name = name.split('_')\r\n                name.shift()\r\n                name = name.join();\r\n                parsed = parseFunctionFromText(att.value);  \r\n            }\r\n            else if (typeof att.value === 'string') {\r\n                try {\r\n                    parsed = JSON.parse(att.value)\r\n                } catch (err) {\r\n                    parsed = att.value;\r\n                }\r\n            }\r\n            if(!this[name]) {\r\n                Object.defineProperties(\r\n                    this, att, {\r\n                        value:parsed,\r\n                        writable:true,\r\n                        get() { return this[name]; },\r\n                        set(val) { this.setAttribute(name, val); }\r\n                    }\r\n                )\r\n            }\r\n            this[name] = parsed;\r\n            this.props[name] = parsed; //set on props too (e.g. to more easily modify initial conditions without stringifying an object)\r\n            this.obsAttributes.push(name);\r\n            \r\n            //console.log(this.observedAttributes);\r\n        });\r\n\r\n        let resizeevent = new CustomEvent('resized', {detail: { props:this.props }});\r\n        let changed = new CustomEvent('changed', {detail: { props:this.props }});\r\n        let deleted = new CustomEvent('deleted', {detail: { props:this.props }});\r\n        let created = new CustomEvent('created', {detail: { props:this.props }});\r\n        //now we can add event listeners for our custom events\r\n\r\n        this.render(this.props);\r\n        this.dispatchEvent(created);\r\n\r\n        this.state.subscribeTrigger('props',()=>{this.dispatchEvent(changed)});\r\n\r\n        if(typeof this.onresize === 'function') {\r\n            if(this.ONRESIZE) {\r\n                try { window.removeEventListener('resize',this.ONRESIZE); } catch(err) {}\r\n            }\r\n            this.ONRESIZE = (ev) => { this.onresize(this.props); } \r\n            window.addEventListener('resize',this.ONRESIZE);       \r\n        }\r\n\r\n        if(typeof this.ondelete === 'function') {\r\n            let ondelete = this.ondelete;\r\n            this.ondelete = (props=this.props) => {\r\n                if(this.ONRESIZE) window.removeEventListener('resize',this.ONRESIZE);\r\n                this.state.unsubscribeTrigger('props');\r\n                ondelete(props);\r\n            }\r\n        }\r\n\r\n        if(typeof this.onchanged === 'function') {\r\n            this.state.data.props = this.props;\r\n            this.state.subscribeTrigger('props',this.onchanged);\r\n        }\r\n\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    delete = () => { //deletes self from the DOM\r\n        this.remove();\r\n        if(typeof this.ondelete === 'function') this.ondelete(this.props);\r\n    };\r\n\r\n    render = (props=this.props) => {\r\n\r\n        if(typeof this.template === 'function') this.templateString = this.template(props); //can pass a function\r\n        else this.templateString = this.template;\r\n\r\n        //this.innerHTML = this.templateString;\r\n\r\n        const t = document.createElement('template');\r\n        t.innerHTML = this.templateString;\r\n        const fragment = t.content;\r\n\r\n        if(this.FRAGMENT) { //will reappend the fragment without reappending the whole node if already rendered once\r\n            if(this.useShadow) {\r\n                this.shadowRoot.removeChild(this.FRAGMENT);\r\n            }   \r\n            else this.removeChild(this.FRAGMENT); \r\n        }\r\n        if(this.useShadow) {\r\n            if(!this.attachedShadow) this.attachShadow({mode:'open'});\r\n            this.shadowRoot.appendChild(fragment); //now you need to use the shadowRoot.querySelector etc.\r\n            this.FRAGMENT = this.shadowRoot.childNodes[this.shadowRoot.childNodes.length-1]\r\n        }   \r\n        else this.appendChild(fragment);\r\n        this.FRAGMENT = this.childNodes[this.childNodes.length-1]\r\n        \r\n        if(this.oncreate) this.oncreate(props); //set scripted behaviors\r\n    }\r\n\r\n    state = {\r\n        pushToState:{},\r\n        data:{},\r\n        triggers:{},\r\n        setState(updateObj){\r\n            Object.assign(this.pushToState,updateObj);\r\n\r\n            if(Object.keys(this.triggers).length > 0) {\r\n                // Object.assign(this.data,this.pushToState);\r\n                for (const prop of Object.getOwnPropertyNames(this.triggers)) {\r\n                    if(this.pushToState[prop]) {\r\n                        this.data[prop] = this.pushToState[prop]\r\n                        delete this.pushToState[prop];\r\n                        this.triggers[prop].forEach((obj)=>{\r\n                            obj.onchanged(this.data[prop]);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.pushToState;\r\n        },\r\n        subscribeTrigger(key,onchanged=(res)=>{}){\r\n            if(key) {\r\n                if(!this.triggers[key]) {\r\n                    this.triggers[key] = [];\r\n                }\r\n                let l = this.triggers[key].length;\r\n                this.triggers[key].push({idx:l, onchanged:onchanged});\r\n                return this.triggers[key].length-1;\r\n            } else return undefined;\r\n        },\r\n        unsubscribeTrigger(key,sub){\r\n            let idx = undefined;\r\n            let triggers = this.triggers[key]\r\n            if (triggers){\r\n                if(!sub) delete this.triggers[key];\r\n                else {\r\n                    let obj = triggers.find((o)=>{\r\n                        if(o.idx===sub) {return true;}\r\n                    });\r\n                    if(obj) triggers.splice(idx,1);\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        subscribeTriggerOnce(key=undefined,onchanged=(value)=>{}) {\r\n            let sub;\r\n            let changed = (value) => {\r\n                onchanged(value);\r\n                this.unsubscribeTrigger(key,sub);\r\n            }\r\n\r\n            sub = this.subscribeTrigger(key,changed);\r\n        }\r\n    }\r\n\r\n    get props() {\r\n        return this.props;\r\n    } \r\n\r\n    set props(newProps={}) {\r\n        this.setAttribute('props',newProps);\r\n    }\r\n\r\n    get template() {\r\n        return this.template;\r\n    } \r\n\r\n    set template(template) {\r\n        this.setAttribute('template',template);\r\n    }\r\n\r\n    get render() {\r\n        return this.render;\r\n    }\r\n\r\n    get delete() {\r\n        return this.delete;\r\n    }\r\n\r\n    get state() {\r\n        return this.state;\r\n    }\r\n\r\n    //past tense just so it can't conflict with onchange\r\n    get onchanged() {\r\n        return this.onchanged;\r\n    } \r\n\r\n    set onchanged(onchanged) {\r\n        this.setAttribute('onchanged',onchanged);\r\n    }\r\n\r\n    get onresize() {\r\n        return this.props;\r\n    } \r\n\r\n    set onresize(onresize) {\r\n        this.setAttribute('onresize',onresize);\r\n    }\r\n\r\n    get ondelete() {\r\n        return this.props;\r\n    } \r\n\r\n    set ondelete(ondelete) {\r\n        this.setAttribute('ondelete',ondelete);\r\n    }\r\n\r\n    get oncreate() {\r\n        return this.oncreate;\r\n    } \r\n\r\n    set oncreate(oncreate) {\r\n        this.setAttribute('oncreated',oncreate);\r\n    }\r\n}\r\n\r\n//extend the DOMElement class with an new name, this name determines the element name (always lower case in the html regardless of class name cases)\r\nexport function addCustomElement(cls, tag, extend=null) {\r\n    try {\r\n        if(extend) {\r\n            if(tag) window.customElements.define(tag, cls, {extends:extend});\r\n            else window.customElements.define(cls.name.toLowerCase()+'-',cls, {extends:extend});\r\n        }\r\n        else {\r\n            if(tag) window.customElements.define(tag, cls);\r\n            else window.customElements.define(cls.name.toLowerCase()+'-',cls);\r\n        }\r\n    }\r\n    catch(err) {\r\n\r\n    }\r\n}\r\n\r\nexport function randomId(tag='') {\r\n    return tag+Math.floor(Math.random()*1000000000000000);\r\n}\r\n\r\n// Proper DOM fragment implementation which also creates customElements you can use like <so></so>. High HTML5 performance via template fragments\r\nexport function parseFunctionFromText(method) {\r\n    //Get the text inside of a function (regular or arrow);\r\n    let getFunctionBody = (methodString) => {\r\n    return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i, '$2$3$4');\r\n    }\r\n\r\n    let getFunctionHead = (methodString) => {\r\n    let startindex = methodString.indexOf(')');\r\n    return methodString.slice(0, methodString.indexOf('{',startindex) + 1);\r\n    }\r\n\r\n    let newFuncHead = getFunctionHead(method);\r\n    let newFuncBody = getFunctionBody(method);\r\n\r\n    let newFunc;\r\n    try{\r\n        if (newFuncHead.includes('function ')) {\r\n            let varName = newFuncHead.split('(')[1].split(')')[0]\r\n            newFunc = new Function(varName, newFuncBody);\r\n        } else {\r\n            if(newFuncHead.substring(0,6) === newFuncBody.substring(0,6)) {\r\n                //newFuncBody = newFuncBody.substring(newFuncHead.length);\r\n                let varName = newFuncHead.split('(')[1].split(')')[0]\r\n                //console.log(varName, newFuncHead ,newFuncBody);\r\n                newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf('{')+1,newFuncBody.length-1));\r\n            }\r\n            else {\r\n                try {\r\n                    newFunc = eval(newFuncHead + newFuncBody + \"}\");\r\n                } catch(err) {\r\n                    newFunc = eval(method); //try just evaluating the method\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (err) {}\r\n\r\n    return newFunc;\r\n\r\n}\r\n\r\n", "//just a more typical hierarchical graph tree with back and forward prop and arbitrary \r\n// go-here-do-that utilities. Create an object node tree and make it do... things \r\n// same setup as sequencer but object/array/tag only (no functions), and can add arbitrary properties to mutate on objects\r\n// or propagate to children/parents with utility calls that get added to the objects\r\n//Joshua Brewster and Garrett Flynn AGPLv3.0\r\n\r\n\r\n/*\r\n\r\nlet tree = { //top level should be an object, children can be arrays of objects\r\n    tag:'top',\r\n    operator:(input,node,origin)=>{\r\n        if(typeof input === 'object') {\r\n            if(input?.x) node.x = input.x; \r\n            if(input?.y) node.y = input.y;\r\n            if(input?.z) node.z = input.z;\r\n            console.log('top node, input:', input);\r\n        }\r\n        return input;\r\n    }, //input is the previous result if passed from another node. node is 'this' node, origin is the previous node if passed\r\n    forward:true, //forward prop: returned outputs from the operator are passed to children operator(s)\r\n    //backward:true, //backprop: returned outputs from the operator are passed to the parent operator\r\n    x:3, //arbitrary properties available on the node variable in the operator \r\n    y:2,\r\n    z:1,\r\n    children:{ //object, array, or tag. Same as the 'next' tag in Sequencer.js\r\n        tag:'next', //tagged nodes get added to the node map by name, they must be unique! non-tagged nodes are only referenced internally e.g. in call trees\r\n        operator:(input,node,origin)=>{\r\n            if(origin.x) { //copy over the coordinates\r\n                node.x = origin.x;\r\n                node.y = origin.y;\r\n                node.z = origin.z;\r\n            }\r\n            console.log('next node \\n parent node:',node,'\\ninput',input);\r\n        }, // if you use a normal function operator(input,node,origin){} then you can use 'this' reference instead of 'node', while 'node' is more flexible for arrow functions etc.\r\n        //etc..\r\n        delay:500,\r\n        repeat:3\r\n    },\r\n    delay:1000//, //can timeout the operation\r\n    //frame:true //can have the operation run via requestAnimationFrame (throttling)\r\n    //repeat:3 //can repeat an operator, or use \"recursive\" for the same but passing the node's result back in\r\n};\r\n\r\n\r\nlet graph = new AcyclicGraph();\r\ngraph.addNode(tree);\r\n\r\ngraph.run(tree.tag,{x:4,y:5,z:6});\r\n\r\neach node in the tree becomes a GraphNode object\r\n\r\n*/\r\n//TODO: try to reduce the async stack a bit for better optimization, though in general it is advantageous matter as long as node propagation isn't \r\n//   relied on for absolute maximal performance concerns, those generally require custom solutions e.g. matrix math or clever indexing, but this can be used as a step toward that.\r\n\r\n//a graph representing a callstack of nodes which can be arranged arbitrarily with forward and backprop or propagation to wherever\r\nexport const state = {\r\n    pushToState:{},\r\n    data:{},\r\n    triggers:{},\r\n    setState(updateObj){\r\n        Object.assign(this.pushToState,updateObj);\r\n\r\n        if(Object.keys(this.triggers).length > 0) {\r\n            // Object.assign(this.data,this.pushToState);\r\n            for (const prop of Object.getOwnPropertyNames(this.triggers)) {\r\n                if(this.pushToState[prop]) {\r\n                    this.data[prop] = this.pushToState[prop]\r\n                    delete this.pushToState[prop];\r\n                    this.triggers[prop].forEach((obj)=>{\r\n                        obj.onchange(this.data[prop]);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.pushToState;\r\n    },\r\n    subscribeTrigger(key,onchange=(res)=>{}){\r\n        if(key) {\r\n            if(!this.triggers[key]) {\r\n                this.triggers[key] = [];\r\n            }\r\n            let l = this.triggers[key].length;\r\n            this.triggers[key].push({idx:l, onchange:onchange});\r\n            return this.triggers[key].length-1;\r\n        } else return undefined;\r\n    },\r\n    unsubscribeTrigger(key,sub){\r\n        let idx = undefined;\r\n        let triggers = this.triggers[key]\r\n        if (triggers){\r\n            if(!sub) delete this.triggers[key];\r\n            else {\r\n                let obj = triggers.find((o)=>{\r\n                    if(o.idx===sub) {return true;}\r\n                });\r\n                if(obj) triggers.splice(idx,1);\r\n                return true;\r\n            }\r\n        }\r\n    },\r\n    subscribeTriggerOnce(key=undefined,onchange=(value)=>{}) {\r\n        let sub;\r\n        let changed = (value) => {\r\n            onchange(value);\r\n            this.unsubscribeTrigger(key,sub);\r\n        }\r\n\r\n        sub = this.subscribeTrigger(key,changed);\r\n    }\r\n}\r\n\r\nexport class AcyclicGraph {\r\n    state = state;\r\n    nodes = new Map()\r\n    nNodes = 0\r\n\r\n    constructor() {}\r\n\r\n    //convert child objects to nodes\r\n    convertChildrenToNodes(n) {\r\n        n.convertChildrenToNodes(n);\r\n    }\r\n\r\n    //converts all children nodes and tag references to graphnodes also\r\n    addNode(node={}) {\r\n        let converted = new GraphNode(node,undefined,this); \r\n        return converted;\r\n    }\r\n\r\n    getNode(tag) {\r\n        return this.nodes.get(tag);\r\n    }\r\n\r\n    //Should create a sync version with no promises (will block but be faster)\r\n    run(node,input,origin) {\r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if(node)\r\n            return node.run(input,node,origin)\r\n        else return undefined;\r\n    }\r\n\r\n    removeTree(node) {\r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if(node) {\r\n            function recursivelyRemove(node) {\r\n                if(node.children) {\r\n                    if(Array.isArray(node.children)) {\r\n                        node.children.forEach((c)=>{\r\n                            if(c.stopNode) c.stopNode();\r\n                            if(c.tag) {\r\n                                if(this.nodes.get(c.tag)) this.nodes.delete(c.tag);\r\n                            }\r\n                            this.nodes.forEach((n) => {\r\n                                if(n.nodes.get(c.tag)) n.nodes.delete(c.tag);\r\n                            });\r\n                            recursivelyRemove(c);\r\n                        })\r\n                    }\r\n                    else if(typeof node.children === 'object') {\r\n                        if(node.stopNode) node.stopNode();\r\n                        if(node.tag) {\r\n                            if(this.nodes.get(node.tag)) this.nodes.delete(node.tag);\r\n                        }\r\n                        this.nodes.forEach((n) => {\r\n                            if(n.nodes.get(node.tag)) n.nodes.delete(node.tag);\r\n                        });\r\n                        recursivelyRemove(node);\r\n                    }\r\n                }\r\n            }\r\n            if(node.stopNode) node.stopNode();\r\n            if(node.tag) {\r\n                this.nodes.delete(node.tag);\r\n                this.nodes.forEach((n) => {\r\n                    if(n.nodes.get(node.tag)) n.nodes.delete(node.tag);\r\n                });\r\n                recursivelyRemove(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    removeNode(node) {\r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if(node?.tag) this.nodes.delete(node.tag);\r\n        if(node?.tag) {\r\n            if(this.nodes.get(node.tag)) \r\n            {\r\n                this.nodes.delete(node.tag);\r\n                if(this.graph) this.graph.nodes.delete(node.tag);\r\n                this.nodes.forEach((n) => {\r\n                    if(n.nodes.get(node.tag)) n.nodes.delete(node.tag);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    appendNode(node={}, parentNode) {\r\n        parentNode.addChildren(node);\r\n    }\r\n\r\n    async callParent(node, input, origin=node, cmd) {\r\n        if(node?.parent) {\r\n            return await node.callParent(input, node.parent, origin, cmd);\r\n        }\r\n    }\r\n\r\n    async callChildren(node, input, origin=node, cmd, idx) {\r\n        if(node?.children) {\r\n            return await node.callChildren(input, origin, cmd, idx);\r\n        }\r\n    }\r\n\r\n    subscribe(tag,callback=(res)=>{}) {\r\n        return this.state.subscribeTrigger(tag,callback);\r\n    }\r\n\r\n    unsubscribe(tag,sub) {\r\n        this.state.unsubscribeTrigger(tag,sub);\r\n    }\r\n\r\n}\r\n\r\n//the utilities in this class can be referenced in the operator after setup for more complex functionality\r\n//node functionality is self-contained, use a graph for organization\r\nexport class GraphNode {\r\ntag;\r\nparent;\r\nchildren;\r\ngraph;\r\nstate = state; //shared trigger state\r\nnodes = new Map();\r\n\r\nconstructor(properties={}, parentNode, graph) {\r\n    if(!properties.tag && graph) properties.tag = `node${graph.nNodes}`; //add a sequential id to find the node in the tree \r\n    else if(!properties.tag) properties.tag = `node${Math.floor(Math.random()*10000000000)}`; //add a random id for the top index if none supplied\r\n    Object.assign(this,properties); //set the node's props as this\r\n    this.parent=parentNode;\r\n    this.graph=graph;\r\n\r\n    if(graph) {\r\n        graph.nNodes++;\r\n        graph.nodes.set(properties.tag,this);\r\n    }\r\n\r\n    if(this.children) this.convertChildrenToNodes(this);\r\n}\r\n\r\n//I/O scheme for this node\r\noperator(input,node=this,origin,cmd){\r\n    return input;\r\n}\r\n\r\n//run the operator\r\nasync runOp(input,node=this,origin,cmd) {\r\n    let result = await this.operator(input,node,origin,cmd);\r\n    if(this.tag) this.state.setState({[this.tag]:result});\r\n    return result;\r\n}\r\n\r\n//Should create a sync version with no promises (will block but be faster)\r\nrunNode(node,input,origin) {\r\n    if(typeof node === 'string') node = this.nodes.get(node);\r\n    if(node)\r\n        return node.run(input,node,origin)\r\n    else return undefined;\r\n}\r\n\r\n//runs the node sequence\r\n//Should create a sync version with no promises (will block but be faster)\r\nrun(input,node=this,origin) {\r\n    if(typeof node === 'string') \r\n        {\r\n            let fnd;\r\n            if(this.graph) fnd = this.graph.nodes.get(node);\r\n            if(!fnd) fnd = this.nodes.get(node);\r\n            node = fnd;\r\n            if(!node) return undefined;\r\n        }\r\n\r\n    return new Promise(async (resolve) => {\r\n        if(node) {\r\n            let run = (node, inp, tick=0) => {\r\n                return new Promise (async (r) => {\r\n                    tick++;\r\n                    let res = await node.runOp(inp,node,origin,tick);\r\n                    if(typeof node.repeat === 'number') {\r\n                        while(tick < node.repeat) {\r\n                            if(node.delay) {\r\n                                setTimeout(async ()=>{\r\n                                    r(await run(node,inp,tick));\r\n                                },node.delay);\r\n                                break;\r\n                            } else if (node.frame && requestAnimationFrame) {\r\n                                requestAnimationFrame(async ()=>{\r\n                                    r(await run(node,inp,tick));\r\n                                });\r\n                                break;\r\n                            }\r\n                            else res = await node.runOp(inp,node,origin,tick);\r\n                            tick++;\r\n                        }\r\n                        if(tick === node.repeat) {\r\n                            r(res);\r\n                            return;\r\n                        }\r\n                    } else if(typeof node.recursive === 'number') {\r\n                        \r\n                        while(tick < node.recursive) {\r\n                            if(node.delay) {\r\n                                setTimeout(async ()=>{\r\n                                    r(await run(node,res,tick));\r\n                                },node.delay);\r\n                                break;\r\n                            } else if (node.frame && requestAnimationFrame) {\r\n                                requestAnimationFrame(async ()=>{\r\n                                    r(await run(node,res,tick));\r\n                                });\r\n                                break;\r\n                            }\r\n                            else res = await node.runOp(res,node,origin,tick);\r\n                            tick++;\r\n                        }\r\n                        if(tick === node.recursive) {\r\n                            r(res);\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        r(res);\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n            let runnode = async () => {\r\n\r\n                let res = await run(node,input); //repeat/recurse before moving on to the parent/child\r\n\r\n                if(node.backward && node.parent) {\r\n                    await this.runNode(node.parent,res,node);\r\n                }\r\n                if(node.children && node.forward) {\r\n                    if(Array.isArray(node.children)) {\r\n                        for(let i = 0; i < node.children.length; i++) {\r\n                            await this.runNode(node.children[i],res,node);\r\n                        }\r\n                    }\r\n                    else await this.runNode(node.children,res,node);\r\n                }\r\n\r\n                //can add an animationFrame coroutine, one per node //because why not\r\n                if(node.animate && !node.isAnimating) {\r\n                    this.runAnimation(input,node,origin);\r\n                }\r\n\r\n                //can add an infinite loop coroutine, one per node, e.g. an internal subroutine\r\n                if(typeof node.loop === 'number' && !node.isLooping) {\r\n                    this.runLoop(input,node,origin);\r\n                }\r\n                \r\n                return res;\r\n            }\r\n\r\n            if(node.delay) {\r\n                setTimeout(async ()=>{\r\n                    resolve(await runnode());\r\n                },node.delay);\r\n            } else if (node.frame && requestAnimationFrame) {\r\n                requestAnimationFrame(async ()=>{\r\n                    resolve(await runnode());\r\n                });\r\n            } else {\r\n                resolve(await runnode());\r\n            }\r\n            \r\n        }\r\n        else resolve(undefined);\r\n    });\r\n}\r\n\r\nrunAnimation(input,node=this,origin) {\r\n    //can add an animationFrame coroutine, one per node //because why not\r\n    if(node.animate && !node.isAnimating) {\r\n        node.isAnimating = true;\r\n        let anim = async () => {\r\n            if(node.isAnimating) {\r\n                await node.runOp( \r\n                    input,\r\n                    node,\r\n                    origin,\r\n                    'animate'\r\n                );\r\n                requestAnimationFrame(async ()=>{await anim();});\r\n            }\r\n        }\r\n        requestAnimationFrame(anim);\r\n    }\r\n}\r\n\r\nrunLoop(input,node=this,origin) {\r\n    //can add an infinite loop coroutine, one per node, e.g. an internal subroutine\r\n    if(typeof node.loop === 'number' && !node.isLooping) {\r\n        node.isLooping = true;\r\n        let loop = async () => {\r\n            if(node.looping)  {\r\n                await node.runOp( \r\n                    input,\r\n                    node,\r\n                    origin,\r\n                    'loop'\r\n                );\r\n                setTimeout(async ()=>{await loop();},node.loop);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//this is the i/o handler, or the 'main' function for this node to propagate results. The origin is the node the data was propagated from\r\nsetOperator(operator=function operator(input,node=this,origin,cmd){return input;}) {\r\n    this.operator = operator;\r\n}\r\n\r\nsetParent(parent) { \r\n    this.parent = parent;\r\n}\r\n\r\nsetChildren(children) {\r\n    this.children = children;\r\n}\r\n\r\nremoveTree(node) {\r\n    if(typeof node === 'string') node = this.nodes.get(node);\r\n    if(node) {\r\n        function recursivelyRemove(node) {\r\n            if(node.children) {\r\n                if(Array.isArray(node.children)) {\r\n                    node.children.forEach((c)=>{\r\n                        if(c.stopNode) c.stopNode();\r\n                        if(c.tag) {\r\n                            if(this.nodes.get(c.tag)) this.nodes.delete(c.tag);\r\n                        }\r\n                        this.nodes.forEach((n) => {\r\n                            if(n.nodes.get(c.tag)) n.nodes.delete(c.tag);\r\n                        });\r\n                        recursivelyRemove(c);\r\n                    })\r\n                }\r\n                else if(typeof node.children === 'object') {\r\n                    if(node.stopNode) node.stopNode();\r\n                    if(node.tag) {\r\n                        if(this.nodes.get(node.tag)) this.nodes.delete(node.tag);\r\n                    }\r\n                    this.nodes.forEach((n) => {\r\n                        if(n.nodes.get(node.tag)) n.nodes.delete(node.tag);\r\n                    });\r\n                    recursivelyRemove(node);\r\n                }\r\n            }\r\n        }\r\n        if(node.stopNode) node.stopNode();\r\n        if(node.tag) {\r\n            this.nodes.delete(node.tag);\r\n            this.nodes.forEach((n) => {\r\n                if(n.nodes.get(node.tag)) n.nodes.delete(node.tag);\r\n            });\r\n            recursivelyRemove(node);\r\n            if(this.graph) this.graph.nodes.removeTree(node); //remove from parent graph too \r\n        }\r\n    }\r\n}\r\n\r\n//converts all children nodes and tag references to graphnodes also\r\naddNode(node={}) {\r\n    let converted = new GraphNode(node,this,this.graph); \r\n    this.nodes.set(converted);\r\n    if(this.graph) this.graph.nodes.set(converted);\r\n    return converted;\r\n}\r\n\r\nremoveNode(node) {\r\n    if(typeof node === 'string') node = this.nodes.get(node);\r\n    if(node?.tag) this.nodes.delete(node.tag);\r\n    if(node?.tag) {\r\n        if(this.nodes.get(node.tag)) \r\n        {\r\n            this.nodes.delete(node.tag);\r\n            if(this.graph) this.graph.nodes.delete(node.tag);\r\n            this.nodes.forEach((n) => {\r\n                if(n.nodes.get(node.tag)) n.nodes.delete(node.tag);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nappendNode(node, parentNode=this) {\r\n    if(typeof node === 'string') node = this.nodes.get(node);\r\n    if(node) parentNode.addChildren(node);\r\n}\r\n\r\ngetNode(tag) {\r\n    return this.nodes.get(tag);\r\n}\r\n\r\n//stop any loops\r\nstopLooping() {\r\n    node.isLooping = false;\r\n}\r\n\r\nstopAnimating() {\r\n    node.isAnimating = false;\r\n}\r\n\r\nstopNode() {\r\n    this.stopAnimating();\r\n    this.stopLooping();\r\n}\r\n\r\n//append child\r\naddChildren(children) {\r\n    if(!this.children) this.children = [];\r\n    if(!Array.isArray(this.children) && this.children) this.children = [this.children];\r\n    else if(Array.isArray(children)) this.children.push(...children);\r\n    else this.children.push(children);\r\n}\r\n\r\nconvertChildrenToNodes(n=this) {\r\n    if(n.children?.name === 'GraphNode') { \r\n        if(!this.graph?.nodes.get(n.tag)) this.graph.nodes.set(n.tag);\r\n        if(!this.nodes.get(n.tag)) this.nodes.set(n.tag); \r\n    }\r\n    else if (Array.isArray(n.children)) {\r\n        for(let i = 0; i < n.children.length; i++) {\r\n            if(n.children[i].name === 'GraphNode') { \r\n                if(!this.graph?.nodes.get(n.children[i].tag)) this.graph.nodes.set(n.children[i].tag);\r\n                if(!this.nodes.get(n.children[i].tag)) this.nodes.set(n.children[i].tag);\r\n                continue; \r\n            }\r\n            else if(typeof n.children[i] === 'object') {\r\n                n.children[i] = new GraphNode(n.children[i],n,this.graph);\r\n                this.nodes.set(n.children[i].tag);\r\n                this.convertChildrenToNodes(n.children[i]);\r\n            } \r\n            else if (typeof n.children[i] === 'string') {\r\n                if(this.graph) {\r\n                    n.children[i] = this.graph.getNode(n.children[i]); //try graph scope\r\n                    if(!this.nodes.get(n.children[i].tag)) this.nodes.set(n.children[i]);\r\n                }\r\n                if(!n.children[i]) n.children[i] = this.nodes.get(n.children[i]); //try local scope\r\n            }\r\n            \r\n        }\r\n    }\r\n    else if(typeof n.children === 'object') {\r\n        n.children = new GraphNode(n.children,n,this.graph);\r\n        this.nodes.set(n.children.tag);\r\n        this.convertChildrenToNodes(n.children);\r\n    } \r\n    else if (typeof n.children === 'string') {\r\n        if(this.graph) {\r\n            n.children = this.graph.getNode(n.children); //try graph scope\r\n            if(!this.nodes.get(n.children.tag)) this.nodes.set(n.children);\r\n        }\r\n        if(!n.children) n.children = this.nodes.get(n.children); //try local scope\r\n    }\r\n    return n.children;\r\n}\r\n\r\n//Call parent node operator directly\r\nasync callParent(input, origin=this, cmd){\r\n    if(typeof this.parent?.operator === 'function') return await this.parent.runOp(input,this.parent,origin, cmd);\r\n}\r\n\r\nasync callChildren(input, origin=this, cmd, idx){\r\n    let result;\r\n    if(Array.isArray(this.children)) {\r\n        if(idx) result = await this.children[idx]?.runOp(input,this.children[idx],origin,cmd);\r\n        else {\r\n            result = [];\r\n            for(let i = 0; i < this.children.length; i++) {\r\n                result.push(await this.children[i]?.runOp(input,this.children[i],origin,cmd));\r\n            } \r\n        }\r\n    } else if(this.children) {\r\n        result = await this.children.runOp(input,this.children,origin,cmd);\r\n    }\r\n    return result;\r\n}\r\n\r\nsetProps(props={}) {\r\n    Object.assign(this,props);\r\n}\r\n\r\nsubscribe(tag=this.tag,callback=(res)=>{}) {\r\n    return this.state.subscribeTrigger(tag,callback);\r\n}\r\n\r\nunsubscribe(tag=this.tag,sub) {\r\n    this.state.unsubscribeTrigger(tag,sub);\r\n}\r\n\r\n}\r\n\r\n\r\n// exports.AcyclicGraph = AcyclicGraph;\r\n// exports.GraphNode = GraphNode;\r\n\r\n", "\r\nimport {DOMElement, addCustomElement} from 'fragelement';\r\n\r\nimport {GraphNode} from 'acyclicgraph'\r\n\r\nlet component = require('./graph.node.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class NodeDiv extends DOMElement {\r\n    props={\r\n        operator:(\r\n            input, //input, e.g. output from another node\r\n            node,  //'this' node\r\n            origin, //origin node\r\n            cmd    //e.g. 'loop' or 'animate' will be defined if the operator is running on the loop or animate routines, needed something. Can define more commands but you might as well use an object in input for that. \r\n        )=>{ console.log(input); return input; }, //Operator to handle I/O on this node. Returned inputs can propagate according to below settings\r\n        forward:true, //pass output to child nodes\r\n        backward:false, //pass output to parent node\r\n        children:undefined, //child node(s), can be tags of other nodes, properties objects like this, or graphnodes, or null\r\n        parent:undefined, //parent graph node\r\n        delay:false, //ms delay to fire the node\r\n        repeat:false, // set repeat as an integer to repeat the input n times\r\n        recursive:false, //or set recursive with an integer to pass the output back in as the next input n times\r\n        animate:false, //true or false\r\n        loop:undefined, //milliseconds or false\r\n        tag:undefined, //generated if not specified, or use to get another node by tag instead of generating a new one\r\n        input:undefined,// can set on the attribute etc\r\n        graph:undefined, //parent AcyclicGraph instance, can set manually or via enclosing acyclic-graph div\r\n        node:undefined, //GraphNode instance, can set manually or as a string to grab a node by tag (or use tag)\r\n    }; //can specify properties of the element which can be subscribed to for changes.\r\n\r\n    input_delay=1 //onload runNode delay for graph nodes to run operations on inputs, they will not recognize their children otherwise as the DOM loads\r\n\r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    //gotta customize this a little from the default DOMElement\r\n    render = (props=this.props) => {\r\n\r\n        if(typeof this.template === 'function') this.templateString = this.template(props); //can pass a function\r\n        else this.templateString = this.template;\r\n\r\n        //this.innerHTML = this.templateString;\r\n\r\n        const t = document.createElement('template');\r\n        t.innerHTML = this.templateString;\r\n        const fragment = t.content;\r\n        if(this.fragment) { //will reappend the fragment without reappending the whole node if already rendered once\r\n            this.removeChild(this.fragment); \r\n        }\r\n        this.fragment = fragment;\r\n        this.appendChild(fragment);\r\n        \r\n        \r\n        //add this here which will run a routine AFTER rendering so the elements can be updated\r\n        this.setupNode(this.props);\r\n        if(this.props.input) { //e.g. run the node on input\r\n            setTimeout(async()=>{\r\n                this.props.node.runNode(this.props.node,this.props.input,this.props.graph); //run the inputs on the nodes once the children are loaded on the DOM so things propagate correctly\r\n            },\r\n            this.input_delay //makes sure children are loaded (e.g. on a DOM with a lot of loading, should add some execution delay to anticipate it as initial nodes are not aware of later-rendered nodes on the DOM)\r\n            );\r\n        }\r\n        if(this.oncreate) this.oncreate(props); //set scripted behaviors\r\n    }\r\n\r\n    setupNode(props) {\r\n        let parent = this.parentNode;\r\n        if(parent.props?.operator) { //has operator, this is a graph-node (in case you extend it with a new tagName)\r\n            if(parent.props?.node) props.parent = parent.props.node;\r\n        }\r\n        if(!props.graph) {   \r\n            while(!parent.props?.nodes) { //has nodes prop, is an acyclic-graph\r\n                // console.log(parent)\r\n                // console.log(parent.tagName)\r\n                if(parent.constructor.name === 'HTMLBodyElement' || parent.constructor.name === 'HTMLHeadElement' || parent.constructor.name === 'HTMLHtmlElement' || parent.constructor.name === 'HTMLDocument') {\r\n                    //console.error(\"No AcyclicGraph Found\")\r\n                    break;\r\n                }\r\n                parent = parent.parentNode;\r\n            }\r\n            if(parent.props?.nodes) {\r\n                props.graph = parent.props.graph;\r\n                props.input_delay = parent.props.input_delay;\r\n            }\r\n        }\r\n        if(this.id && !props.tag) props.tag = this.id;\r\n\r\n        if(props.graph && !props.node && props.tag) props.node = props.graph.nodes.get(props.tag); //can try to get graph nodes by id or tag\r\n        else if(props.graph && typeof props.node === 'string') props.node = props.graph.nodes.get(props.node); //can try to get graph nodes by id or tag\r\n        \r\n        if(!props.node) props.node = new GraphNode(props, props.parent, props.graph); //you could pass a graphnode \r\n\r\n        props.tag = props.node.tag;\r\n        if(!this.id) this.id = props.tag;\r\n\r\n        if(props.parent) {\r\n            props.parent.addChildren(props.node);\r\n        }\r\n    }\r\n\r\n    \r\n    //DOMElement custom callbacks:\r\n    //oncreate=(props)=>{} //after rendering\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nNodeDiv.addElement('graph-node');\r\n", "\r\nimport {DOMElement} from 'fragelement';\r\n\r\nimport {AcyclicGraph} from 'acyclicgraph'\r\n\r\nlet component = require('./acyclic.graph.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class Graph extends DOMElement {\r\n    props={\r\n        graph:new AcyclicGraph(),\r\n        nodes:[]\r\n    } //can specify properties of the element which can be subscribed to for changes.\r\n    \r\n    input_delay=1 //onload delay to give the children nodes enough time to get ready with their slight delays to work around the DOM a bit\r\n\r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        setTimeout(\r\n            ()=> { //timeout ensures everything is on the DOM before pairing/creating graphnode objects as each is constructed sequentially and run before the next one exists\r\n                //get the child nodes from nested graph-node divs\r\n                let children = Array.from(this.children);\r\n                let top_children = [];\r\n                if(children?.length > 0) {\r\n                    children.forEach((n)=>{\r\n                        if(n.props) this.props.nodes.push(n.props.node);\r\n                        if(n.props && n.parentNode.tagName === this.tagName) top_children.push(n)\r\n                    });\r\n                }\r\n\r\n                this.children_ready(children,top_children);\r\n                \r\n            }, \r\n            this.input_delay\r\n        );\r\n    }\r\n\r\n    //like oncreate but once all of the child nodes should be loaded in the DOM, so you don't need to change the constructor\r\n    children_ready(all_children=[],top_children=[]) {\r\n        this.querySelector('button').onclick = () => { //test \r\n            top_children.forEach((c)=>{\r\n                c.props.node.runNode(c.props.node)\r\n            });\r\n        }\r\n    }\r\n\r\n    //DOMElement custom callbacks:\r\n    //oncreate=(props)=>{}\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nGraph.addElement('acyclic-graph');\r\n", "import {NodeDiv} from '../acyclicgraph/graph.node'\r\n\r\nlet component = require('./canvas.node.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class CanvasNode extends NodeDiv {\r\n    props={\r\n        \r\n\r\n        operator:(\r\n            input,\r\n            node,\r\n            origin,\r\n            cmd\r\n        )=>{ \r\n\r\n            if(cmd === 'animate') {\r\n                //draw loop\r\n                this.draw(input,node,origin,cmd);\r\n                for(let i = 0; i < this.drawFuncs.length; i++) { //lets use other nodes to send draw functions to the canvas\r\n                    let f = this.drawFuncs[i];\r\n                    if(typeof f === 'function') {\r\n                        f(input,node,origin,cmd); //pass the args in (need these if you pass arrow functions)\r\n                    }\r\n                }\r\n            } else {\r\n                //e.g. input commands\r\n                if(typeof input === 'object') {\r\n                    \r\n                } else if (typeof input === 'number') {\r\n                    \r\n                } else if (typeof input === 'string') {\r\n                    \r\n                } else {\r\n                    \r\n                }\r\n            }\r\n        },\r\n\r\n        forward:true, //pass output to child nodes\r\n        backward:false, //pass output to parent node\r\n        children:undefined, //child node(s), can be tags of other nodes, properties objects like this, or graphnodes, or null\r\n        parent:undefined, //parent graph node\r\n        delay:false, //ms delay to fire the node\r\n        repeat:false, // set repeat as an integer to repeat the input n times\r\n        recursive:false, //or set recursive with an integer to pass the output back in as the next input n times\r\n        animate:true, //true or false\r\n        loop:undefined, //milliseconds or false\r\n        tag:undefined, //generated if not specified, or use to get another node by tag instead of generating a new one\r\n        input:undefined,// can set on the attribute etc\r\n        graph:undefined, //parent AcyclicGraph instance, can set manually or via enclosing acyclic-graph div\r\n        node:undefined, //GraphNode instance, can set manually or as a string to grab a node by tag (or use tag)\r\n    }; //can specify properties of the element which can be subscribed to for changes.\r\n\r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    draw(input,node,origin,cmd) {\r\n        let canvas = this.props.canvas;\r\n        let ctx = this.props.ctx;\r\n    }\r\n\r\n    addDraw(f) {\r\n        if(typeof f === 'function') this.drawFuncs.push(f);\r\n    }\r\n\r\n    drawFuncs = []; // draw(input,args,origin,cmd){} <--- passes operator args\r\n    \r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        this.canvas = this.querySelector('canvas');\r\n        if(props.width) {\r\n            this.canvas.width = props.width;\r\n            this.canvas.style.height = props.height;\r\n        }\r\n        if(props.height) {\r\n            this.canvas.height = props.height;\r\n            this.canvas.style.height = props.height;\r\n        }\r\n        if(props.style) {\r\n            this.canvas.style = props.style;\r\n            setTimeout(()=>{\r\n                this.canvas.height = this.canvas.clientHeight;\r\n                this.canvas.width = this.canvas.clientWidth;\r\n            },10); //slight recalculation delay time\r\n        }\r\n\r\n        props.canvas = this.canvas;\r\n        if(props.context) props.context = this.canvas.getContext(props.context);\r\n        else props.context = this.canvas.getContext('2d');\r\n        this.context = props.context;\r\n        this.ctx = this.context;\r\n        props.ctx = this.context;\r\n\r\n        setTimeout(()=>{if(props.animate) props.node.runAnimation();},10)\r\n\r\n    }\r\n\r\n    //after rendering\r\n    onresize=(props)=>{\r\n        if(this.canvas) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n            this.canvas.style.width = this.canvas.clientWidth;\r\n            this.canvas.style.height = this.canvas.clientHeight;\r\n        }\r\n    } //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nCanvasNode.addElement('canvas-node');\r\n", "import {NodeDiv} from '../acyclicgraph/graph.node'\r\n\r\nlet component = require('./button.node.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class ButtonNode extends NodeDiv {\r\n    props={\r\n        operator:(input,node,origin,cmd)=>{ \r\n            if(input) this.props.input = input;\r\n            return this.props.input; \r\n        }, //Operator to handle I/O on this node. Returned inputs can propagate according to below settings\r\n        forward:true, //pass output to child nodes\r\n        backward:false, //pass output to parent node\r\n        children:undefined, //child node(s), can be tags of other nodes, properties objects like this, or graphnodes, or null\r\n        delay:false, //ms delay to fire the node\r\n        repeat:false, // set repeat as an integer to repeat the input n times\r\n        recursive:false, //or set recursive with an integer to pass the output back in as the next input n times\r\n        animate:false, //true or false\r\n        loop:undefined, //milliseconds or false\r\n        tag:undefined, //generated if not specified, or use to get another node by tag instead of generating a new one\r\n        input:undefined,// can set on the attribute etc\r\n        graph:undefined, //parent AcyclicGraph instance, can set manually or via enclosing acyclic-graph div\r\n        node:undefined, //GraphNode instance, can set manually or as a string to grab a node by tag (or use tag)\r\n    }; //can specify properties of the element which can be subscribed to for changes.\r\n\r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n    \r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        let button = this.querySelector('button');\r\n\r\n        button.onclick = (ev) => {\r\n            props.node.run(props.input);\r\n        }\r\n    } //after rendering\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nButtonNode.addElement('button-node');\r\n", "\r\nimport {addCustomElement} from 'fragelement';\r\n\r\nimport {NodeDiv} from '../acyclicgraph/graph.node'\r\n\r\nlet component = require('./input.node.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class InputNode extends NodeDiv {\r\n    props={\r\n        operator:(input,node,origin,cmd)=>{ \r\n            this.props.input = input;\r\n            return input; \r\n        }, //Operator to handle I/O on this node. Returned inputs can propagate according to below settings\r\n        forward:true, //pass output to child nodes\r\n        backward:false, //pass output to parent node\r\n        children:undefined, //child node(s), can be tags of other nodes, properties objects like this, or graphnodes, or null\r\n        delay:false, //ms delay to fire the node\r\n        repeat:false, // set repeat as an integer to repeat the input n times\r\n        recursive:false, //or set recursive with an integer to pass the output back in as the next input n times\r\n        animate:false, //true or false\r\n        loop:undefined, //milliseconds or false\r\n        tag:undefined, //generated if not specified, or use to get another node by tag instead of generating a new one\r\n        input:undefined,// can set on the attribute etc\r\n        graph:undefined, //parent AcyclicGraph instance, can set manually or via enclosing acyclic-graph div\r\n        node:undefined, //GraphNode instance, can set manually or as a string to grab a node by tag (or use tag)\r\n    }; //can specify properties of the element which can be subscribed to for changes.\r\n\r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n    \r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        let input = this.querySelector('input');\r\n        input.type = this.type;\r\n\r\n        input.oninput = (ev) => {\r\n            if(props.node) props.node.callChildren(ev.target.value); \r\n            //passes inputs to child nodes without triggering them to pass on\r\n        }\r\n    } //after rendering\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nInputNode.addElement('input-node');\r\n", "\r\nimport {DOMElement} from 'fragelement';\r\n\r\nlet component = require('./component.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class Custom extends DOMElement {\r\n    props={} //can specify properties of the element which can be subscribed to for changes.\r\n    \r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        //set up the business logic for the component\r\n        let button = this.querySelector('button');\r\n        let div = this.querySelector('div');\r\n        if(button) button.onclick = (ev)=>{\r\n            div.innerHTML = 'Clicked!'\r\n        };\r\n    }\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nCustom.addElement('custom-');\r\n", "\r\nimport {NodeDiv} from '../acyclicgraph/graph.node'\r\n\r\nlet component = require('./logger.node.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class LoggerDiv extends NodeDiv {\r\n\r\n    log = (\r\n        message,  //the message\r\n        templateString=`<tr><td>${message}</td></tr>` //can apply any template string you want per-line\r\n    ) => {\r\n\r\n        const t = document.createElement('template');\r\n        t.innerHTML = templateString;\r\n        const fragment = t.content;\r\n\r\n        if(!this.props.div) {     \r\n            this.props.div = this.querySelector('table');\r\n            if(this.props.scrollable) this.props.div.style.overflow = 'hidden';\r\n        }\r\n\r\n        if(this.props.messages.length >= this.props.max) {\r\n            this.props.messages.shift();\r\n            this.props.messagedivs[0].remove();\r\n            this.props.messagedivs.shift();\r\n        }\r\n        \r\n        this.props.messages.push(message);\r\n\r\n        this.props.div.appendChild(fragment);\r\n\r\n        let children = this.querySelectorAll('tr');\r\n        this.props.messagedivs.push(children[children.length-1]);\r\n\r\n        \r\n        if(this.props.messagedivs.length+2 >= this.props.max) {\r\n            if(this.props.messagedivs[this.props.max-3]) {\r\n                if(this.props.messagedivs.length === this.props.max)\r\n                    this.props.messagedivs[0].style.opacity = '0.25'; //add some fade out                }\r\n            }\r\n            if(this.props.messagedivs[this.props.max-2]) {\r\n                if(this.props.messagedivs.length === this.props.max) {\r\n                    this.props.messagedivs[1].style.opacity = '0.5'; \r\n                } else {    \r\n                    this.props.messagedivs[0].style.opacity = '0.5';\r\n                }\r\n            }\r\n            if (this.props.messagedivs.length === this.props.max) {\r\n                this.props.messagedivs[2].style.opacity = '0.75';\r\n            }\r\n            else if(this.props.messagedivs.length+1 >= this.props.max) {\r\n                this.props.messagedivs[1].style.opacity = '0.75'; \r\n            } else{\r\n                this.props.messagedivs[0].style.opacity = '0.75';\r\n            } \r\n        }\r\n\r\n    }\r\n    \r\n\r\n    props={\r\n        messages:[],\r\n        messagedivs:[],\r\n        max:5, //max messages in div\r\n        scrollable:false,\r\n        div:undefined,\r\n        log:this.log,\r\n\r\n        operator:(\r\n            input, //input, e.g. output from another node\r\n            node,  //'this' node\r\n            origin, //origin node\r\n            cmd    //e.g. 'loop' or 'animate' will be defined if the operator is running on the loop or animate routines, needed something. Can define more commands but you might as well use an object in input for that. \r\n        )=>{ console.log(input); return input; }, //Operator to handle I/O on this node. Returned inputs can propagate according to below settings\r\n        forward:true, //pass output to child nodes\r\n        backward:false, //pass output to parent node\r\n        children:undefined, //child node(s), can be tags of other nodes, properties objects like this, or graphnodes, or null\r\n        parent:undefined, //parent graph node\r\n        delay:false, //ms delay to fire the node\r\n        repeat:false, // set repeat as an integer to repeat the input n times\r\n        recursive:false, //or set recursive with an integer to pass the output back in as the next input n times\r\n        animate:false, //true or false\r\n        loop:undefined, //milliseconds or false\r\n        tag:undefined, //generated if not specified, or use to get another node by tag instead of generating a new one\r\n        input:undefined,// can set on the attribute etc\r\n        graph:undefined, //parent AcyclicGraph instance, can set manually or via enclosing acyclic-graph div\r\n        node:undefined, //GraphNode instance, can set manually or as a string to grab a node by tag (or use tag)\r\n    }; //can specify properties of the element which can be subscribed to for changes.\r\n\r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n    } //after rendering\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nLoggerDiv.addElement('logger-');\r\n", "\r\nimport {DOMElement, addCustomElement} from 'fragelement';\r\nimport {settings} from '../../../node_server/server_settings'\r\n\r\nlet component = require('./socket.component.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class Socket extends DOMElement {\r\n    props={\r\n        protocol:settings.socket_protocol,\r\n        host:settings.host, \r\n        port:settings.python, //settings.python_node \r\n        subdomain:'',\r\n        ws:undefined,\r\n        logger:undefined //logger node\r\n    } //can specify properties of the element which can be subscribed to for changes.\r\n    \r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        //if(settings.protocol === 'http') this.props.protocol = 'ws'; //still ws for node sockets in https\r\n    }\r\n\r\n    //default\r\n    onmessage = async (event) => {\r\n\r\n        let ts = new Date(Date.now());\r\n        let tsm = ts.getHours()+':'+ts.getMinutes()+':'+ts.getSeconds();\r\n\r\n        let msg = event.data;\r\n\r\n        if(event.data.constructor.name === 'Blob') msg = await event.data.text();\r\n\r\n        let message = `${tsm}:: WS ${this.props.host}:${this.props.port} message:\\n ${msg}`;\r\n        let template = `<tr><td style='color:lightgreen;'>${message}</tr></td>`;\r\n\r\n        if(this.props.logger) this.props.logger.props.log(message,template);\r\n        else console.log(message);\r\n    }\r\n\r\n    onopen=undefined;\r\n    onclose=undefined;\r\n\r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        //let host = 'localhost';\r\n        //let port = 7000;\r\n\r\n        if(!props.logger) props.logger = document.querySelector('logger-');\r\n        else if(typeof props.logger === 'string') props.logger = document.getElementById(props.logger);\r\n\r\n        try {\r\n            props.ws = new WebSocket(`${props.protocol}://${props.host}:${props.port}/${props.subdomain}`);  \r\n            props.ws.onmessage = this.onmessage;\r\n            this.ws = props.ws;\r\n\r\n            if(this.onopen) props.ws.addEventListener('open', this.onopen);\r\n            if(this.onclose) props.ws.addEventListener('close', this.onclose);\r\n\r\n            props.ws.onerror = (er) => {\r\n                props.ws.close();\r\n            };\r\n        } catch (err) {}\r\n      \r\n    }\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    ondelete=(props)=>{\r\n        props.ws.close();\r\n    } //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\naddCustomElement(Socket,'socket-');\r\n", "\r\nimport {DOMElement, addCustomElement} from 'fragelement';\r\nimport {settings} from '../../../node_server/server_settings'\r\n\r\nlet component = require('./sse.component.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class SSE extends DOMElement {\r\n    props={\r\n        protocol:settings.protocol,\r\n        host:settings.host, \r\n        port:settings.python, \r\n        subdomain:'sse',\r\n        sse:undefined,\r\n        logger:undefined //logger node\r\n    } //can specify properties of the element which can be subscribed to for changes.\r\n    \r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    onmessage = async (event) => {\r\n\r\n        let ts = new Date(Date.now());\r\n        let tsm = ts.getHours()+':'+ts.getMinutes()+':'+ts.getSeconds();\r\n\r\n        let msg = event.data;\r\n        if(event.data.constructor.name === 'Blob') msg = await event.data.text();\r\n\r\n        let message = `${tsm}:: SSE ${this.props.host}:${this.props.port} message:\\n ${msg}`;\r\n        let template = `<tr><td style='color:yellow;'>${message}</tr></td>`;\r\n\r\n        if(this.props.logger) this.props.logger.props.log(message,template);\r\n        else console.log(message);\r\n    }\r\n\r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        //let host = 'localhost';\r\n        //let port = 7000;\r\n\r\n        if(!props.logger) props.logger = document.querySelector('logger-');\r\n        else if(typeof props.logger === 'string') props.logger = document.getElementById(props.logger);\r\n\r\n        try {\r\n            props.sse = new EventSource(`${props.protocol}://${props.host}:${props.port}/${props.subdomain}`);\r\n            this.sse = props.sse;\r\n\r\n            if(props.sse) props.sse.onmessage = this.onmessage;\r\n\r\n            props.sse.onerror = (er) => { \r\n                console.error(er);\r\n                props.sse.close(); \r\n            }\r\n            \r\n        }\r\n        catch(err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    ondelete=(props)=>{\r\n        props.sse.close()\r\n    } //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\naddCustomElement(SSE,'sse-');\r\n", "\r\nimport {addCustomElement} from 'fragelement';\r\n\r\nimport {NodeDiv} from '../acyclicgraph/graph.node'\r\n\r\nlet component = require('./circlecanvas.node.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class CircleCanvasNode extends NodeDiv {\r\n    props={\r\n        radius:20,\r\n        triggered:false,\r\n\r\n        operator:(\r\n            input,\r\n            node,\r\n            origin,\r\n            cmd\r\n        )=>{ \r\n            \r\n            if(!this.props.triggered) {\r\n                this.props.radius += Math.random()-0.5;\r\n            }\r\n\r\n            if(cmd === 'animate') {\r\n                this.draw();\r\n                for(let i = 0; i < this.drawFuncs.length; i++) { //lets use other nodes to send draw functions to the canvas\r\n                    let f = this.drawFuncs[i];\r\n                    if(typeof f === 'function') {\r\n                        f(input,node,origin,cmd); //pass the args in (need these if you pass arrow functions)\r\n                    }\r\n                }\r\n            } else {\r\n                if(typeof input === 'object') {\r\n                    if(input.radius) this.props.radius += input.radius;\r\n                    this.props.triggered = true;\r\n                } else if (typeof input === 'number') {\r\n                    this.props.radius += input;\r\n                    this.props.triggered = true;\r\n                } else if (typeof input === 'string') {\r\n                    this.props.radius += parseFloat(input);\r\n                    this.props.triggered = true;\r\n                } else {\r\n                    this.props.radius += Math.random()-0.5;\r\n                    this.props.triggered = true;\r\n                }\r\n            }\r\n        },\r\n        forward:true, //pass output to child nodes\r\n        backward:false, //pass output to parent node\r\n        children:undefined, //child node(s), can be tags of other nodes, properties objects like this, or graphnodes, or null\r\n        parent:undefined, //parent graph node\r\n        delay:false, //ms delay to fire the node\r\n        repeat:false, // set repeat as an integer to repeat the input n times\r\n        recursive:false, //or set recursive with an integer to pass the output back in as the next input n times\r\n        animate:true, //true or false\r\n        loop:undefined, //milliseconds or false\r\n        tag:undefined, //generated if not specified, or use to get another node by tag instead of generating a new one\r\n        input:undefined,// can set on the attribute etc\r\n        graph:undefined, //parent AcyclicGraph instance, can set manually or via enclosing acyclic-graph div\r\n        node:undefined, //GraphNode instance, can set manually or as a string to grab a node by tag (or use tag)\r\n    }; //can specify properties of the element which can be subscribed to for changes.\r\n\r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    draw(input,node,origin,cmd) {\r\n        let canvas = this.props.canvas;\r\n        let ctx = this.props.ctx;\r\n        if(this.props.radius <= 1) this.props.radius = 1;\r\n        ctx.clearRect(0,0,canvas.width,canvas.height);\r\n        this.drawCircle(\r\n            canvas.width*0.5,\r\n            canvas.height*0.5,\r\n            this.props.radius,\r\n            'green',\r\n            5,\r\n            '#003300'\r\n        );\r\n    }\r\n\r\n    addDraw(f) {\r\n        if(typeof f === 'function') this.drawFuncs.push(f);\r\n    }\r\n\r\n    drawFuncs = []; // draw(input,args,origin,cmd){} <--- passes operator args\r\n        \r\n    drawCircle(centerX, centerY, radius, fill='green', strokewidth=5, strokestyle='#003300') {\r\n        this.props.ctx.beginPath();\r\n        this.props.ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\r\n        this.props.ctx.fillStyle = fill;\r\n        this.props.ctx.fill();\r\n        this.props.ctx.lineWidth = strokewidth;\r\n        this.props.ctx.strokeStyle = strokestyle;\r\n        this.props.ctx.stroke();\r\n    }\r\n\r\n    drawLine(\r\n        from={x:0,y:0},\r\n        to={x:1,y:1},\r\n        strokewidth=5,\r\n        strokestyle='#003300'\r\n    ) {\r\n        this.props.ctx.beginPath();\r\n        this.props.ctx.lineWidth = strokewidth;\r\n        this.props.ctx.strokeStyle = strokestyle;\r\n        this.props.ctx.moveTo(from.x, from.y);\r\n        this.props.ctx.lineTo(to.x, to.y);\r\n        this.props.ctx.stroke();\r\n    }\r\n    \r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        this.canvas = this.querySelector('canvas');\r\n        if(props.width) {\r\n            this.canvas.width = props.width;\r\n            this.canvas.style.height = props.height;\r\n        }\r\n        if(props.height) {\r\n            this.canvas.height = props.height;\r\n            this.canvas.style.height = props.height;\r\n        }\r\n        if(props.style) {\r\n            this.canvas.style = props.style;\r\n            setTimeout(()=>{\r\n                this.canvas.height = this.canvas.clientHeight;\r\n                this.canvas.width = this.canvas.clientWidth;\r\n            },10); //slight recalculation delay time\r\n        }\r\n\r\n        props.canvas = this.canvas;\r\n        if(props.context) props.context = this.canvas.getContext(props.context);\r\n        else props.context = this.canvas.getContext('2d');\r\n        this.context = props.context;\r\n        this.ctx = this.context;\r\n        props.ctx = this.context;\r\n\r\n        setTimeout(()=>{if(props.animate) props.node.runAnimation();},10)\r\n\r\n    }\r\n\r\n    //after rendering\r\n    onresize=(props)=>{\r\n        if(this.canvas) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n            this.canvas.style.width = this.canvas.clientWidth;\r\n            this.canvas.style.height = this.canvas.clientHeight;\r\n        }\r\n    } //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nCircleCanvasNode.addElement('circlecanvas-node');\r\n", "//By Joshua Brewster (MIT License)\r\nexport class DynamicParticles {\r\n    constructor(\r\n        rules=[\r\n        ['boids',100],\r\n        ['boids',50]\r\n        ], \r\n        canvas=undefined,\r\n        defaultCanvas=true,\r\n        init=true\r\n    ) {\r\n        \r\n        this.canvas = canvas;\r\n        this.defaultCanvas=defaultCanvas;\r\n        this.ctx = undefined;\r\n        this.looping = false;\r\n        this.currFrame = performance.now()*0.001; \r\n        this.frameOffset = undefined;\r\n        this.ticks = 0;\r\n\r\n        this.startingRules = rules;\r\n\r\n        /*\r\n            Rule format:\r\n            [\r\n                [ //group 1 rule\r\n                    'type', //named group type. Use addRule(...) to generate rulesets\r\n                    maxcount,  //max number of particles\r\n                    boundingBox[x,y,z], //bounding box for the group. Scales calculations accordingly. Can also use the canvas dimensions passed in by default\r\n                    spawnRate, //number of particles added per frame (respawns all if undefined)\r\n                    initialCount //initial count of particles (spawns all if undefined) \r\n                    useBoids, //use boids? mainly applies to the default function unless you integrate this into your own rules\r\n                    timestepFunc, (per particle timestep, groups have additional rules for efficient scoping)\r\n                    \r\n                ], etc...\r\n            ]\r\n        */\r\n\r\n        this.nGroups = this.startingRules.length;\r\n\r\n        this.particles = [];\r\n        this.maxParticles = 0; //max possible particles based on rulesets\r\n\r\n        this.colorScale = ['#000000', '#030106', '#06010c', '#090211', '#0c0215', '#0e0318', '#10031b', '#12041f', '#130522', '#140525', '#150628', '#15072c', '#16082f', '#160832', '#160936', '#160939', '#17093d', '#170a40', '#170a44', '#170a48', '#17094b', '#17094f', '#170953', '#170956', '#16085a', '#16085e', '#150762', '#140766', '#140669', '#13066d', '#110571', '#100475', '#0e0479', '#0b037d', '#080281', '#050185', '#020089', '#00008d', '#000090', '#000093', '#000096', '#000099', '#00009c', '#00009f', '#0000a2', '#0000a5', '#0000a8', '#0000ab', '#0000ae', '#0000b2', '#0000b5', '#0000b8', '#0000bb', '#0000be', '#0000c1', '#0000c5', '#0000c8', '#0000cb', '#0000ce', '#0000d1', '#0000d5', '#0000d8', '#0000db', '#0000de', '#0000e2', '#0000e5', '#0000e8', '#0000ec', '#0000ef', '#0000f2', '#0000f5', '#0000f9', '#0000fc', '#0803fe', '#2615f9', '#3520f4', '#3f29ef', '#4830eb', '#4e37e6', '#543ee1', '#5944dc', '#5e49d7', '#614fd2', '#6554cd', '#6759c8', '#6a5ec3', '#6c63be', '#6e68b9', '#6f6db4', '#7072af', '#7177aa', '#717ba5', '#7180a0', '#71859b', '#718996', '#708e91', '#6f928b', '#6e9786', '#6c9b80', '#6aa07b', '#68a475', '#65a96f', '#62ad69', '#5eb163', '#5ab65d', '#55ba56', '#4fbf4f', '#48c347', '#40c73f', '#36cc35', '#34ce32', '#37cf31', '#3ad130', '#3cd230', '#3fd32f', '#41d52f', '#44d62e', '#46d72d', '#48d92c', '#4bda2c', '#4ddc2b', '#4fdd2a', '#51de29', '#53e029', '#55e128', '#58e227', '#5ae426', '#5ce525', '#5ee624', '#60e823', '#62e922', '#64eb20', '#66ec1f', '#67ed1e', '#69ef1d', '#6bf01b', '#6df11a', '#6ff318', '#71f416', '#73f614', '#75f712', '#76f810', '#78fa0d', '#7afb0a', '#7cfd06', '#7efe03', '#80ff00', '#85ff00', '#89ff00', '#8eff00', '#92ff00', '#96ff00', '#9aff00', '#9eff00', '#a2ff00', '#a6ff00', '#aaff00', '#adff00', '#b1ff00', '#b5ff00', '#b8ff00', '#bcff00', '#bfff00', '#c3ff00', '#c6ff00', '#c9ff00', '#cdff00', '#d0ff00', '#d3ff00', '#d6ff00', '#daff00', '#ddff00', '#e0ff00', '#e3ff00', '#e6ff00', '#e9ff00', '#ecff00', '#efff00', '#f3ff00', '#f6ff00', '#f9ff00', '#fcff00', '#ffff00', '#fffb00', '#fff600', '#fff100', '#ffec00', '#ffe700', '#ffe200', '#ffdd00', '#ffd800', '#ffd300', '#ffcd00', '#ffc800', '#ffc300', '#ffbe00', '#ffb900', '#ffb300', '#ffae00', '#ffa900', '#ffa300', '#ff9e00', '#ff9800', '#ff9300', '#ff8d00', '#ff8700', '#ff8100', '#ff7b00', '#ff7500', '#ff6f00', '#ff6800', '#ff6100', '#ff5a00', '#ff5200', '#ff4900', '#ff4000', '#ff3600', '#ff2800', '#ff1500', '#ff0004', '#ff000c', '#ff0013', '#ff0019', '#ff001e', '#ff0023', '#ff0027', '#ff002b', '#ff012f', '#ff0133', '#ff0137', '#ff013b', '#ff023e', '#ff0242', '#ff0246', '#ff0349', '#ff034d', '#ff0450', '#ff0454', '#ff0557', '#ff065b', '#ff065e', '#ff0762', '#ff0865', '#ff0969', '#ff0a6c', '#ff0a70', '#ff0b73', '#ff0c77', '#ff0d7a', '#ff0e7e', '#ff0f81', '#ff1085', '#ff1188', '#ff128c', '#ff138f', '#ff1493'];\r\n\r\n        this.rules = [\r\n            {type:'default',groupRuleGen:this.defaultGroupRule, timestepFunc:this.defaultTimestepFunc, animateParticle:this.defaultAnimation},\r\n            {type:'boids',groupRuleGen:this.defaultGroupRule, timestepFunc:this.defaultTimestepFunc, animateParticle:this.defaultAnimation }\r\n        ]\r\n\r\n        this.prototype = {\r\n            position:{x:0,y:0,z:0},\r\n            velocity:{x:0,y:0,z:0},\r\n            acceleration:{x:0,y:0,z:0},\r\n            force:{x:0,y:0,z:0},\r\n            timestepFunc: undefined,//(group,particle,timeStep)=>{} per-particle step function you can customize\r\n            type:\"boids\", //Behavior trees: boids, predators, plant cell, animal cell, algae, bacteria, atom, proton, neutron, electron, conway, can combine\r\n            particleSize: 5,\r\n            startingX: 0.5, \r\n            startingY: 0.5,\r\n            maxSpeed: 40, \r\n            xBounce: -1,\r\n            yBounce: -1,\r\n            gravity: 0.0, //Downward z acceleration (-9.81m/s^2 = Earth gravity)\r\n            mass:1,\r\n            drag:0.033, //Drag coefficient applied to v(t-1)\r\n            life:0, //Seconds since spawn\r\n            lifeTime: 100000000, //Number of seconds before the particle despawns\r\n            boundingBox:{left:0,right:1,bot:1,top:0,front:0,back:1}, //bounding box, 1 = max height/width of render window\r\n            boid:{\r\n                boundingBox:{left:0,right:1,bot:1,top:0,front:0,back:1}, //bounding box, 1 = max height/width of render window\r\n                cohesion:0.00001,\r\n                separation:0.0001,\r\n                alignment:0.006,\r\n                swirl:{x:0.5,y:0.5,z:0.5,mul:0.006},\r\n                attractor:{x:0.5,y:0.5,z:0.5,mul:0.002},\r\n                avoidance:{groups:[],mul:0.1},\r\n                useCohesion:true,\r\n                useSeparation:true,\r\n                useAlignment:true,\r\n                useSwirl:true,\r\n                useAttractor:true,\r\n                useAvoidance:true,\r\n                attraction: 0.00000000006674, //Newton's gravitational constant by default\r\n                useAttraction:false, //particles can attract each other on a curve\r\n                groupRadius:200,\r\n                groupSize:10,\r\n                searchLimit:10\r\n            },\r\n            plant:{\r\n                diet:\"photosynthetic\", //if plant or animal cell: herbivore, carnivore, omnivore, photosynthetic, dead, dead_animal, dead_plant. Determines what other particles they will consume/trend toward\r\n            },\r\n            animal:{\r\n                diet:\"omnivore\", //if plant or animal cell: herbivore, carnivore, omnivore, photosynthetic, dead, dead_animal, dead_plant. Determines what other particles they will consume/trend toward\r\n            },\r\n            bacteria:{},\r\n            atom:{},\r\n            proton:{},\r\n            neutron:{},\r\n            electron:{},\r\n            conway:{\r\n                survivalRange:[2,3], //nCell neighbors range for survival & reproduction\r\n                reproductionRange:[3,3], //nCell neighbors range required to produce a living cell\r\n                groupRadius:10 //pixel distance for grouping \r\n            }\r\n            \r\n        };\r\n\r\n        if(init) this.init();\r\n        \r\n    }\r\n\r\n    init = (rules=this.startingRules) => {\r\n        if(this.canvas && this.defaultCanvas) {\r\n            this.ctx = this.canvas.getContext(\"2d\");\r\n        }\r\n        if(this.canvas) {\r\n            window.addEventListener('resize',this.onresize);\r\n        }\r\n\r\n        this.setupRules(rules);\r\n        this.startingRules = rules;\r\n\r\n        if(!this.looping) {\r\n            this.currFrame = performance.now()*0.001;\r\n            this.looping = true;\r\n            this.loop();\r\n        }\r\n    }\r\n\r\n    setupRules(rules=this.startingRules) {\r\n        rules.forEach((rule,i) => {\r\n            //console.log(rule)\r\n            let group = this.addGroup(rule);\r\n        });\r\n        return this.particles;\r\n    }\r\n\r\n    deinit = () => {\r\n        this.looping = false;\r\n        if(this.canvas) {\r\n            window.removeEventListener('resize',this.onresize());\r\n        } \r\n    }\r\n    \r\n    defaultAnimation = (particle) => {\r\n        this.ctx.beginPath();\r\n        let magnitude = Math.sqrt(particle.velocity.x*particle.velocity.x + particle.velocity.y*particle.velocity.y + particle.velocity.z*particle.velocity.z)\r\n        \r\n        var value = Math.floor(magnitude*255/(particle.maxSpeed*1.2));\r\n        if(value > 255) { value = 255; }\r\n        else if (value < 0) { value = 0; }\r\n        this.ctx.fillStyle = this.colorScale[value];\r\n\r\n        // Draws a circle of radius 20 at the coordinates 100,100 on the canvas\r\n        this.ctx.arc(particle.position.x, particle.position.y, particle.particleSize, 0, Math.PI*2, true); \r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n\r\n    }\r\n\r\n    distance3D(a,b) //assumes you're passing two Array(3) i.e. [x,y,z]\r\n    {\r\n        if(Array.isArray(a)) { \r\n            return Math.sqrt((b[0]-a[0])*(b[0]-a[0]) + (b[1]-a[1])*(b[1]-a[1]) + (b[2]-a[2])*(b[2]-a[2]));\r\n        }\r\n        else {\r\n            return Math.sqrt((b.x-a.x)*(b.x-a.x) + (b.y-a.y)*(b.y-a.y) + (b.z-a.z)*(b.z-a.z));\r\n        }\r\n    }  \r\n\r\n    normalize3D(vec3 = []) {\r\n        let normal;\r\n        if(Array.isArray(vec3)) {\r\n            normal = Math.sqrt(vec3[0]*vec3[0]+vec3[1]*vec3[1]+vec3[2]*vec3[2]);\r\n            return [vec3[0]/normal,vec3[1]/normal,vec3[2]/normal];\r\n        }\r\n        else  {\r\n            normal = Math.sqrt(vec3.x*vec3.x+vec3.y*vec3.y+vec3.z*vec3.z);\r\n            return {x:vec3.x/normal,y:vec3.y/normal,z:vec3.z/normal};\r\n        }\r\n            \r\n    }\r\n\r\n    //Assign new properties to a group by index\r\n    updateGroupProperties=(groupIdx,properties={},key=undefined,subkey=undefined)=>{\r\n        if(key) {\r\n            if(subkey)\r\n            this.particles[groupIdx].particles.map(p=>Object.assign(p[key][subkey],properties));\r\n            else\r\n                this.particles[groupIdx].particles.map(p=>Object.assign(p[key],properties));\r\n        \r\n        }    else\r\n            this.particles[groupIdx].particles.map(p=>Object.assign(p,properties));\r\n    }\r\n\r\n    defaultGroupRule = (particle,rule) =>{\r\n\r\n        particle.type = rule[0];\r\n\r\n        if(rule[1] > 3000 && rule[1] < 5000) {particle.boid.searchLimit = 3;}\r\n        else if (rule[1]>=5000) {particle.boid.searchLimit = 1;}\r\n\r\n        let avoidanceGroups = rule[7];\r\n        if(avoidanceGroups){\r\n            particle.boid.avoidance.groups = avoidanceGroups;\r\n        } \r\n\r\n        let h=1,w=1,d=1;\r\n        if(rule[2]){\r\n             h = rule[2][0];\r\n             w = rule[2][1];\r\n             d = rule[2][2];\r\n            particle.boid.separation *= (h+w+d)/3;\r\n        }\r\n        else if(this.canvas) {\r\n             h = this.canvas.height;\r\n             w = this.canvas.width;\r\n             d = this.canvas.width;\r\n        } else {\r\n             h = 1;\r\n             w = 1;\r\n             d = 1;\r\n        }\r\n        let startX =  Math.random()*w;\r\n        let startY =  Math.random()*h;\r\n        let startZ =  Math.random()*d;\r\n        particle.startingX = Math.random();\r\n        particle.startingY = Math.random();\r\n        particle.startingZ = Math.random();\r\n        particle.position = {x:startX,y:startY,z:startZ};\r\n        particle.boundingBox = {\r\n            left:particle.boundingBox.left*w,\r\n            right:particle.boundingBox.right*w,\r\n            bot:particle.boundingBox.bot*h,\r\n            top:particle.boundingBox.top*h,\r\n            front:particle.boundingBox.front*d,\r\n            back:particle.boundingBox.back*d\r\n        };\r\n        particle.boid.boundingBox = {\r\n            left:particle.boid.boundingBox.left*w,\r\n            right:particle.boid.boundingBox.right*w,\r\n            bot:particle.boid.boundingBox.bot*h,\r\n            top:particle.boid.boundingBox.top*h,\r\n            front:particle.boid.boundingBox.front*d,\r\n            back:particle.boid.boundingBox.back*d\r\n        };\r\n        particle.boid.attractor = {\r\n            x:0.5*w,\r\n            y:0.5*h,\r\n            z:0.5*d,\r\n            mul:particle.boid.attractor.mul\r\n        };\r\n        particle.boid.swirl = {\r\n            x:0.5*w,\r\n            y:0.5*h,\r\n            z:0.5*d,\r\n            mul:particle.boid.swirl.mul\r\n        };\r\n    } //can dynamically allocate particle group properties\r\n\r\n    checkParticleBounds = (particle) => {\r\n        \r\n        if((particle.velocity.x > particle.maxSpeed) || (particle.velocity.y > particle.maxSpeed) || (particle.velocity.z > particle.maxSpeed) || (particle.velocity.x < -particle.maxSpeed) || (particle.velocity.y < -particle.maxSpeed) || (particle.velocity.z < -particle.maxSpeed)) {\r\n            let normalized = this.normalize3D([particle.velocity.x,particle.velocity.y,particle.velocity.z]);\r\n            particle.velocity.x = normalized[0]*particle.maxSpeed;\r\n            particle.velocity.y = normalized[1]*particle.maxSpeed;\r\n            particle.velocity.z = normalized[2]*particle.maxSpeed;\r\n        }\r\n        \r\n        // Give the particle some bounce\r\n        if ((particle.position.y - particle.particleSize) <= particle.boundingBox.top) {\r\n            particle.velocity.y *= particle.yBounce;\r\n            particle.position.y = particle.boundingBox.top + particle.particleSize;\r\n        }\r\n        if ((particle.position.y + particle.particleSize) >= particle.boundingBox.bot) {\r\n            particle.velocity.y *= particle.yBounce;\r\n            particle.position.y = particle.boundingBox.bot - particle.particleSize;\r\n        }\r\n\r\n        if (particle.position.x - (particle.particleSize) <= particle.boundingBox.left) {\r\n            particle.velocity.x *= particle.xBounce;\r\n            particle.position.x = particle.boundingBox.left + (particle.particleSize);\r\n        }\r\n\r\n        if (particle.position.x + (particle.particleSize) >= particle.boundingBox.right) {\r\n            particle.velocity.x *= particle.xBounce;\r\n            particle.position.x = particle.boundingBox.right - particle.particleSize;\r\n        }\r\n\r\n        if (particle.position.z - (particle.particleSize) <= particle.boundingBox.front) {\r\n            particle.velocity.z *= particle.xBounce;\r\n            particle.position.z = particle.boundingBox.front + (particle.particleSize);\r\n        }\r\n\r\n        if (particle.position.z + (particle.particleSize) >= particle.boundingBox.back) {\r\n            particle.velocity.z *= particle.xBounce;\r\n            particle.position.z = particle.boundingBox.back - particle.particleSize;\r\n        }\r\n    }\r\n\r\n\r\n    defaultTimestepFunc = (group,timeStep)=>{ //what happens on each time step?\r\n\r\n        if(group.particles.length < group.max) {\r\n            let max = group.max;\r\n            let count = group.particles.length;\r\n            if(group.spawnRate) {\r\n                count=0;\r\n                max = group.spawnRate;\r\n            \r\n            }\r\n            while(count < max) {\r\n                //add a new particle\r\n                group.particles.push(this.newParticle());\r\n                group.groupRuleGen(group.particles[group.particles.length-1],group.rule);\r\n                count++;\r\n            }\r\n        } else if (group.particles.length > group.max) {\r\n            group.particles.splice(group.max);\r\n        }\r\n\r\n        if(group.useBoids) {\r\n            let success = this.calcBoids(group.particles,timeStep);\r\n            if(!success) console.error('boids error');\r\n        }\r\n\r\n        let expiredidx = [];\r\n        group.particles.forEach((p,i) => {\r\n            \r\n            if(p.timestepFunc) p.timestepFunc(group, p, timeStep);\r\n\r\n            if(p.gravity !== 0) p.velocity.y += p.gravity*timeStep;\r\n            \r\n            if(p.force.x !== 0){ \r\n                p.velocity.x += p.force.x*timeStep/p.mass;\r\n            }\r\n            if(p.force.y !== 0){\r\n                p.velocity.y += p.force.y*timeStep/p.mass;\r\n            }\r\n            if(p.force.z !== 0){\r\n                p.velocity.z += p.force.z*timeStep/p.mass;\r\n            }\r\n\r\n            if(p.acceleration.x !== 0){ \r\n                p.velocity.x += p.acceleration.x*timeStep;\r\n            }\r\n            if(p.acceleration.y !== 0){\r\n                p.velocity.y += p.acceleration.y*timeStep;\r\n            }\r\n            if(p.acceleration.z !== 0){\r\n                p.velocity.z += p.acceleration.z*timeStep;\r\n            }\r\n\r\n            if(p.velocity.x !== 0){\r\n                p.position.x += p.velocity.x*timeStep;\r\n            }\r\n            if(p.velocity.y !== 0){\r\n                p.position.y += p.velocity.y*timeStep;\r\n            }\r\n            if(p.velocity.z !== 0){\r\n                p.position.z += p.velocity.z*timeStep;\r\n            }\r\n\r\n            //if(i === 0) console.log(p.velocity,p.position,timeStep);\r\n\r\n            this.checkParticleBounds(p);\r\n\r\n            // Age the particle\r\n            p.life+=timeStep;\r\n\r\n            if(this.defaultCanvas) {\r\n                group.animateParticle(p);\r\n            }\r\n\r\n            // If Particle is old, it goes in the chamber for renewal\r\n            if (p.life >= p.lifeTime) {\r\n                expiredidx.push(i);\r\n            }\r\n\r\n        });\r\n\r\n        expiredidx.reverse().forEach((x)=>{\r\n          group.particles.splice(x,1);\r\n        });\r\n    \r\n    }\r\n\r\n    calcAttraction = (particle1,particle2,distance,timeStep) => { \r\n        let deltax = particle2.position.x-particle1.position.x,\r\n            deltay = particle2.position.y-particle1.position.y,\r\n            deltaz = particle2.position.z-particle1.position.z;\r\n\r\n        let Fg =  particle1.attraction * particle1.mass*particle2.mass/(distance*distance);\r\n\r\n        let FgOnBody1x = Fg*deltax,\r\n            FgOnBody1y = Fg*deltay,\r\n            FgOnBody1z = Fg*deltaz;\r\n\r\n        let v1x = timeStep*FgOnBody1x/particle1.mass,\r\n            v1y = timeStep*FgOnBody1y/particle1.mass,\r\n            v1z = timeStep*FgOnBody1z/particle1.mass;\r\n\r\n        particle1.velocity.x += v1x;\r\n        particle1.velocity.y += v1y;\r\n        particle1.velocity.z += v1z;\r\n\r\n        let v2x = -timeStep*FgOnBody1x/particle2.mass,\r\n            v2y = -timeStep*FgOnBody1y/particle2.mass,\r\n            v2z = -timeStep*FgOnBody1z/particle2.mass;\r\n\r\n        particle2.velocity.x += v2x;\r\n        particle2.velocity.y += v2y;\r\n        particle2.velocity.z += v2z;\r\n\r\n        return v1x, v1y, v1z, v2x, v2y, v2z;\r\n\r\n    }\r\n\r\n    //pass a particle group in, will add to particle velocities and return true if successful\r\n    calcBoids = (particles=[],timeStep, from=0, to=particles.length) => {\r\n        \r\n        const newVelocities = [];\r\n        let _timeStep = 1/timeStep;\r\n        outer:\r\n        for(var i = from; i < to; i++) {\r\n            let p0 = particles[i];\r\n            const inRange = []; //indices of in-range boids\r\n            const distances = []; //Distances of in-range boids\r\n            const boidVelocities = [p0.position.x,p0.position.y,p0.position.z,0,0,0,p0.velocity.x,p0.velocity.y,p0.velocity.z,0,0,0,0,0,0,0,0,0]; //Velocity mods of in-range boids, representing each type of modifier\r\n            /*\r\n                cohesion, separation, alignment, attraction, avoidance\r\n            */\r\n            \r\n           let groupCount = 1;\r\n    \r\n            nested:\r\n            for(let j = 0; j < particles.length; j++) {\r\n                let p = particles[j];\r\n                if(distances.length > p0.boid.groupSize || j >= p0.boid.searchLimit) { break nested; }\r\n\r\n                let randj = Math.floor(Math.random()*particles.length); // Get random index\r\n                if(j===i || randj === i || inRange.indexOf(randj) > -1) {  } else {\r\n                    let pr = particles[randj];\r\n                    let disttemp = this.distance3D(p0.position,pr.position);\r\n                    \r\n                    if(disttemp > p0.boid.groupRadius) { } else {\r\n                        distances.push(disttemp);\r\n                        inRange.push(randj);\r\n\r\n                        let distInv;\r\n                        if(p0.boid.useSeparation || p0.boid.useAlignment) {\r\n                            distInv = (p0.boid.groupRadius/(disttemp*disttemp));\r\n                            if(distInv == Infinity) distInv = p.maxSpeed;\r\n                            else if (distInv == -Infinity) distInv = -p.maxSpeed;\r\n                        }\r\n                \r\n                        if(p0.boid.useCohesion){\r\n                            boidVelocities[0] += (pr.position.x - p0.position.x)*0.5*disttemp*_timeStep;\r\n                            boidVelocities[1] += (pr.position.y - p0.position.y)*0.5*disttemp*_timeStep;\r\n                            boidVelocities[2] += (pr.position.z - p0.position.z)*0.5*disttemp*_timeStep;\r\n                        }\r\n\r\n                        if(isNaN(disttemp) || isNaN(boidVelocities[0]) || isNaN(pr.position.x)) {\r\n                            console.log(disttemp, i, randj, p0.position, pr.position, boidVelocities); p0.position.x = NaN; \r\n                            return;\r\n                        }\r\n\r\n                        if(p0.boid.useSeparation){\r\n                            boidVelocities[3] = boidVelocities[3] + (p0.position.x-pr.position.x)*distInv;\r\n                            boidVelocities[4] = boidVelocities[4] + (p0.position.y-pr.position.y)*distInv; \r\n                            boidVelocities[5] = boidVelocities[5] + (p0.position.z-pr.position.z)*distInv;\r\n                        }\r\n\r\n                        if(p0.boid.useAttraction) {\r\n                            this.calcAttraction(p0,pr,disttemp,timeStep);\r\n                        }\r\n\r\n                        if(p0.boid.useAlignment){\r\n                            //console.log(separationVec);\r\n                            boidVelocities[6] = boidVelocities[6] + pr.velocity.x*distInv; \r\n                            boidVelocities[7] = boidVelocities[7] + pr.velocity.y*distInv;\r\n                            boidVelocities[8] = boidVelocities[8] + pr.velocity.z*distInv;\r\n                        }\r\n\r\n                        groupCount++;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if(p0.boid.useAvoidance && p0.boid.avoidance.groups.length > 0) {\r\n                let searchidx = Math.floor(Math.random()*p0.boid.avoidanceGroups.length);\r\n                const inRange2 = [];\r\n                nested2:\r\n                for(let k = 0; k < p0.searchLimit; k++) {\r\n                    searchidx++;\r\n                    let group = p0.boid.avoidanceGroups[searchidx%p0.boid.avoidanceGroups.length];\r\n                    if(inRange2 > p0.boid.groupSize) { break nested2; }\r\n\r\n                    let randj = Math.floor(Math.random()*group.length); // Get random index\r\n                    if(j===i || randj === i || inRange2.indexOf(randj) > -1) {  } else {\r\n                        let pr = group[randj];\r\n                        let disttemp = this.distance3D(p0.position,pr.position);\r\n                        \r\n                        if(disttemp > p0.boid.groupRadius) { } else {\r\n                            inRange2.push(randj);\r\n                            let distInv = (p0.boid.groupRadius/(disttemp*disttemp));\r\n                            if(distInv == Infinity) distInv = p.maxSpeed;\r\n                            else if (distInv == -Infinity) distInv = -p.maxSpeed;\r\n                            boidVelocities[15] = boidVelocities[15] + (p0.position.x-pr.position.x)*distInv;\r\n                            boidVelocities[16] = boidVelocities[16] + (p0.position.y-pr.position.y)*distInv; \r\n                            boidVelocities[17] = boidVelocities[17] + (p0.position.z-pr.position.z)*distInv;\r\n                        }\r\n                    }\r\n                } \r\n\r\n                let _len = inRange2.length;\r\n                boidVelocities[15] = boidVelocities[15]*_len;\r\n                boidVelocities[16] = boidVelocities[16]*_len;\r\n                boidVelocities[17] = boidVelocities[17]*_len;\r\n\r\n            }\r\n\r\n\r\n            let _groupCount = 1/groupCount;\r\n    \r\n            if(p0.boid.useCohesion){\r\n                boidVelocities[0] = p0.boid.cohesion*(boidVelocities[0]*_groupCount);\r\n                boidVelocities[1] = p0.boid.cohesion*(boidVelocities[1]*_groupCount);\r\n                boidVelocities[2] = p0.boid.cohesion*(boidVelocities[2]*_groupCount);\r\n            } else { boidVelocities[0] = 0; boidVelocities[1] = 0; boidVelocities[2] = 0; }\r\n\r\n            if(p0.boid.useSeparation){\r\n                boidVelocities[3] = p0.boid.separation*boidVelocities[3];\r\n                boidVelocities[4] = p0.boid.separation*boidVelocities[4];\r\n                boidVelocities[5] = p0.boid.separation*boidVelocities[5];\r\n            } else { boidVelocities[3] = 0; boidVelocities[4] = 0; boidVelocities[5] = 0; }\r\n\r\n            if(p0.boid.useAlignment){\r\n                boidVelocities[6] = -(p0.boid.alignment*boidVelocities[6]*_groupCount);\r\n                boidVelocities[7] = p0.boid.alignment*boidVelocities[7]*_groupCount;\r\n                boidVelocities[8] = p0.boid.alignment*boidVelocities[8]*_groupCount;//Use a perpendicular vector [-y,x,z]\r\n            } else { boidVelocities[6] = 0; boidVelocities[7] = 0; boidVelocities[8] = 0; }    \r\n\r\n            const swirlVec = [0,0,0];\r\n            if(p0.boid.useSwirl == true){\r\n                boidVelocities[9] = -(p0.position.y-p0.boid.swirl.y)*p0.boid.swirl.mul;\r\n                boidVelocities[10] = (p0.position.z-p0.boid.swirl.z)*p0.boid.swirl.mul;\r\n                boidVelocities[11] = (p0.position.x-p0.boid.swirl.x)*p0.boid.swirl.mul\r\n            }\r\n            const attractorVec = [0,0,0];\r\n\r\n            if(p0.boid.useAttractor == true){\r\n                boidVelocities[12] = (p0.boid.attractor.x-p0.position.x)*p0.boid.attractor.mul;\r\n                if(p0.position.x > p0.boid.boundingBox.left || p0.position.x < p0.boid.boundingBox.right) {\r\n                    boidVelocities[12] *= 3; //attractor should be in the bounding box for this to work properly \r\n                }\r\n                boidVelocities[13] = (p0.boid.attractor.y-p0.position.y)*p0.boid.attractor.mul;\r\n                if(p0.position.y > p0.boid.boundingBox.top || p0.position.y < p0.boid.boundingBox.bottom) {\r\n                    boidVelocities[13] *= 3;\r\n                }\r\n                boidVelocities[14] = (p0.boid.attractor.z-p0.position.z)*p0.boid.attractor.mul;\r\n                if(p0.position.z > p0.boid.boundingBox.front || p0.position.z < p0.boid.boundingBox.back) {\r\n                    boidVelocities[14] *= 3;\r\n                }\r\n            }\r\n        \r\n            //console.log(attractorVec)\r\n\r\n            //if(i===0) console.log(p0, p0.position, p0.velocity, cohesionVec,separationVec,alignmentVec,swirlVec,attractorVec)\r\n\r\n            newVelocities.push([\r\n                p0.velocity.x*p0.drag+boidVelocities[0]+boidVelocities[3]+boidVelocities[6]+boidVelocities[9]+boidVelocities[12]+boidVelocities[15],\r\n                p0.velocity.y*p0.drag+boidVelocities[1]+boidVelocities[4]+boidVelocities[7]+boidVelocities[10]+boidVelocities[13]+boidVelocities[16],\r\n                p0.velocity.z*p0.drag+boidVelocities[2]+boidVelocities[5]+boidVelocities[8]+boidVelocities[11]+boidVelocities[14]+boidVelocities[17]\r\n            ]);\r\n            //console.log(i,groupCount)\r\n            if(isNaN(newVelocities[newVelocities.length-1][0])) console.log(p0, i, groupCount, p0.position, p0.velocity, cohesionVec,separationVec,alignmentVec,swirlVec,attractorVec)\r\n        }\r\n    \r\n        if(newVelocities.length === particles.length){ // Update particle velocities if newVelocities updated completely, else there was likely an error\r\n            //console.log(newVelocities);\r\n            \r\n            \r\n            particles.forEach((p,i) => {\r\n                p.velocity.x += newVelocities[i][0];\r\n                p.velocity.y += newVelocities[i][1];\r\n                p.velocity.z += newVelocities[i][2];\r\n            })\r\n            //console.timeEnd(\"boid\");\r\n            return true;\r\n        }\r\n        else { console.error(\"Boids error\"); return false; }\r\n    \r\n    }    \r\n\r\n    addRule(\r\n        type='',\r\n        groupRuleGen=(particle,rule)=>{},\r\n        groupTimestepFunc=(group,timestep)=>{},\r\n        animateParticle=(particle)=>{}\r\n    ) {\r\n        if(type.length > 0 && typeof groupRuleGen === 'function' && typeof timestepFunc === 'function' && typeof animateParticle === 'function'){\r\n            this.rules.push({\r\n                type:type,\r\n                groupRuleGen:groupRuleGen,\r\n                timestepFunc:groupTimestepFunc,\r\n                animateParticle:animateParticle\r\n            });\r\n        } else return false;\r\n    }\r\n\r\n    removeGroup(groupIdx=0) {\r\n        if(!this.particles[groupIdx]) return false;\r\n\r\n        this.maxParticles -= this.particles[groupIdx].max;\r\n        this.particles.slice(groupIdx,1);\r\n        return true;\r\n    }\r\n\r\n    addGroup( //type, count, bounding box, particle timestepFunc\r\n        rule=['boids',50]\r\n    ) \r\n        {\r\n        \r\n        if(!Array.isArray(rule)) return false;\r\n        \r\n        let type = rule[0];\r\n        let maxcount = rule[1];\r\n        let boundingBox = rule[2]; //passed to groupRuleGen\r\n        let spawnCount = rule[3];\r\n        let respawnRate = rule[4];\r\n        let useBoids = rule[5]; //for the default function\r\n        if(type === 'boids') useBoids = true; //default true for this rule\r\n        let pTimestepFunc = rule[6];\r\n        \r\n\r\n        if(!rule[0] || !rule[1]) return false;\r\n\r\n        this.maxParticles += rule[1];\r\n\r\n        let timestepFunc, groupRuleGen, animateParticle;\r\n        \r\n        this.rules.forEach((rule)=> {\r\n            if(type === rule.type) {\r\n                timestepFunc = rule.timestepFunc;\r\n                groupRuleGen = rule.groupRuleGen;\r\n                animateParticle = rule.animateParticle;\r\n            }\r\n        });\r\n\r\n        if(!timestepFunc || !groupRuleGen || (this.defaultCanvas && !animateParticle)) return false;\r\n\r\n        let newGroup = new Array(maxcount).fill(0);\r\n\r\n        let attractorx = Math.random()*0.4+0.35;\r\n        let attractory = Math.random()*0.4+0.35;\r\n        let attractorz = Math.random()*0.4+0.35;\r\n\r\n\r\n        if(spawnCount){\r\n            for(let i = 0; i < spawnCount; i++){\r\n                newGroup[i] = this.newParticle();\r\n                groupRuleGen(newGroup[i],rule);\r\n                if(pTimestepFunc) newGroup[i].timestepFunc = timestepFunc;\r\n                if(type === 'boids') {\r\n                    newGroup[i].boid.attractor.x = newGroup[i].boid.boundingBox.right*attractorx;\r\n                    newGroup[i].boid.attractor.y = newGroup[i].boid.boundingBox.bot*attractory;\r\n                    newGroup[i].boid.attractor.z = newGroup[i].boid.boundingBox.back*attractorz;\r\n                    if(attractorx < 0.5) newGroup[i].boid.swirl.mul = -newGroup[i].boid.swirl.mul;\r\n                }\r\n            }\r\n        } else {\r\n            newGroup.forEach((p,i)=>{\r\n                newGroup[i] = this.newParticle();\r\n                groupRuleGen(newGroup[i],rule);\r\n                if(type === 'boids'){\r\n                    if(pTimestepFunc) newGroup[i].timestepFunc = timestepFunc;\r\n                    newGroup[i].boid.attractor.x = newGroup[i].boid.boundingBox.right*attractorx;\r\n                    newGroup[i].boid.attractor.y = newGroup[i].boid.boundingBox.bot*attractory;\r\n                    newGroup[i].boid.attractor.z = newGroup[i].boid.boundingBox.back*attractorz;\r\n                    if(attractorx < 0.5) newGroup[i].boid.swirl.mul = -newGroup[i].boid.swirl.mul;\r\n                }\r\n            });\r\n        }\r\n        this.particles.push(\r\n        {\r\n            rule:rule,\r\n            type:type, \r\n            max:maxcount, \r\n            particles:newGroup, \r\n            timestepFunc:timestepFunc, \r\n            groupRuleGen:groupRuleGen,\r\n            animateParticle:animateParticle,\r\n            spawnRate:respawnRate, //respawn rate\r\n            useBoids:useBoids,\r\n            groupId:\"id\"+Math.floor(Math.random()*99999999)\r\n        });\r\n\r\n        return newGroup;\r\n\r\n    }\r\n\r\n    removeGroup = (idx) => {\r\n        this.particles.splice(idx,1);\r\n    }\r\n\r\n    newParticle(assignments=undefined) {\r\n        let proto = JSON.parse(JSON.stringify(this.prototype));\r\n        if(assignments) Object.assign(proto,assignments);\r\n        return proto;\r\n    }\r\n\r\n    setParticle(particle,assignments={}) {\r\n        Object.assign(particle,assignments);\r\n        return particle;\r\n    }\r\n\r\n    onresize = () => {\r\n        if(this.canvas) {\r\n            if(this.defaultCanvas) {\r\n                this.canvas.width = this.canvas.parentNode.clientWidth;\r\n                this.canvas.height = this.canvas.parentNode.clientHeight;\r\n\r\n                this.canvas.style.width = this.canvas.parentNode.clientWidth;\r\n                this.canvas.style.height = this.canvas.parentNode.clientHeight;\r\n            }\r\n            let h = this.canvas.clientHeight;\r\n            let w = this.canvas.clientWidth;\r\n            let proto = JSON.parse(JSON.stringify(this.prototype));\r\n            let bb = { //Auto resize based on default bounding box settings\r\n                left:proto.boundingBox.left*w,\r\n                right:proto.boundingBox.right*w,\r\n                bot:proto.boundingBox.bot*h,\r\n                top:proto.boundingBox.top*h,\r\n                front:proto.boundingBox.front*h,\r\n                back:proto.boundingBox.back*h\r\n            };\r\n            let bbb = {\r\n                left:proto.boid.boundingBox.left*w,\r\n                right:proto.boid.boundingBox.right*w,\r\n                bot:proto.boid.boundingBox.bot*h,\r\n                top:proto.boid.boundingBox.top*h,\r\n                front:proto.boid.boundingBox.front*h,\r\n                back:proto.boid.boundingBox.back*h\r\n            };;\r\n            this.particles.forEach((g) => {\r\n                g.particles.forEach((p) => {\r\n                    p.boundingBox = JSON.parse(JSON.stringify(bb));\r\n                    p.boid.boundingBox = JSON.parse(JSON.stringify(bbb));\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    frame = (lastFrame) => {\r\n        if(!this.frameOffset) this.frameOffset = lastFrame;\r\n        this.currFrame = performance.now()*0.001+this.frameOffset;\r\n        let timeStep = (this.currFrame - lastFrame);\r\n        if(timeStep > 1) timeStep = 1; //no more than 1s updates\r\n\r\n        if(this.defaultCanvas) {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        }\r\n\r\n        this.particles.forEach((group) => {\r\n            group.timestepFunc(group,timeStep);\r\n            \r\n            if(isNaN(group.particles[0].position.x)) {\r\n                console.log(timeStep,this.ticks,group.particles[0]);\r\n                this.looping = false;\r\n                return;\r\n            }\r\n        });\r\n\r\n        // console.log(\r\n        //     timeStep,\r\n        //     this.particles[0].particles[0].position,\r\n        //     this.particles[0].particles[0].velocity\r\n        //     );\r\n\r\n        this.ticks++;\r\n        //console.log('frame time (s)', (performance.now()*0.001+this.frameOffset) - this.currFrame)\r\n        return this.currFrame;\r\n    }\r\n\r\n    loop = () => {\r\n        if(this.looping === false) return; \r\n        this.frame(this.currFrame);\r\n        setTimeout(()=>{requestAnimationFrame(()=>{this.loop()})},15);\r\n    }\r\n\r\n}", "\r\nimport {addCustomElement} from 'fragelement';\r\n\r\nimport {NodeDiv} from '../acyclicgraph/graph.node'\r\n\r\nimport { DynamicParticles } from 'dynamicparticles'\r\n\r\nlet component = require('./space.node.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class SpaceNode extends NodeDiv {\r\n    props={\r\n        bodies:{}, //the orbital body nodes we're updating\r\n        speed:300000, //time multiplier\r\n        lastTime:undefined,\r\n        now:undefined,\r\n        canvas:undefined,\r\n        ctx:undefined,\r\n        useCanvas:true,\r\n        useHTML:true,\r\n        meter_per_px: 1e9, //viewport scales according to this\r\n        px_per_meter: 1/1e9,\r\n        zind:0,\r\n\r\n        stars:[],\r\n        boids:undefined,\r\n        nstars:undefined,\r\n        nboids:undefined,\r\n         \r\n        operator:(\r\n            input,\r\n            node,\r\n            origin,\r\n            cmd\r\n        )=>{ \r\n\r\n            if(cmd === 'animate') {\r\n                this.props.lastTime = this.props.now;\r\n                this.props.now = Date.now();\r\n\r\n                let tstep;\r\n                let tminus = (this.props.now - this.props.lastTime)*0.001;\r\n                if(tminus > 0.1) tminus = 0.1; //prevent overly long time jumps  \r\n\r\n                tstep = tminus*this.props.speed; //seconds                \r\n               \r\n                let bodies = this.props.bodies;\r\n\r\n                let keys = Object.keys(bodies);\r\n\r\n                for(let i = 0; i < keys.length; i++) {\r\n                    for(let j = 0; j < keys.length; j++) {\r\n                        if(i !== j && !bodies[keys[i]].fixed && !bodies[keys[j]].fixed) {\r\n                            this.newtonianMechanics(bodies[keys[i]],bodies[keys[j]],tstep);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.props.node.callChildren(tstep); // this will update positions\r\n\r\n                //draw loop\r\n                if(this.props.useCanvas) {\r\n                    this.draw(input,node,origin,cmd);\r\n                    for(let i = 0; i < this.drawFuncs.length; i++) { //lets use other nodes to send draw functions to the canvas\r\n                        let f = this.drawFuncs[i];\r\n                        if(typeof f === 'function') {\r\n                            f(input,node,origin,cmd); //pass the args in (need these if you pass arrow functions)\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                //e.g. input commands\r\n                if(typeof input === 'object') {\r\n                    \r\n                } else if (typeof input === 'number') {\r\n                    \r\n                } else if (typeof input === 'string') {\r\n                    \r\n                } else {\r\n                    \r\n                }\r\n            }\r\n        },\r\n        forward:true, //pass output to child nodes\r\n        backward:false, //pass output to parent node\r\n        children:undefined, //child node(s), can be tags of other nodes, properties objects like this, or graphnodes, or null\r\n        delay:false, //ms delay to fire the node\r\n        repeat:false, // set repeat as an integer to repeat the input n times\r\n        recursive:false, //or set recursive with an integer to pass the output back in as the next input n times\r\n        animate:true, //true or false\r\n        loop:undefined, //milliseconds or false\r\n        tag:undefined, //generated if not specified, or use to get another node by tag instead of generating a new one\r\n        input:undefined,// can set on the attribute etc\r\n        graph:undefined, //parent AcyclicGraph instance, can set manually or via enclosing acyclic-graph div\r\n        node:undefined, //GraphNode instance, can set manually or as a string to grab a node by tag (or use tag)\r\n    }; //can specify properties of the element which can be subscribed to for changes.\r\n\r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    draw(input,node,origin,cmd) {\r\n        let canvas = this.props.canvas;\r\n        let ctx = this.props.ctx;\r\n\r\n        //draw a star map on the base canvas\r\n        ctx.clearRect(0,0,canvas.width,canvas.height);\r\n        ctx.fillStyle = '#111111';\r\n        ctx.fillRect(0,0,canvas.width,canvas.height);\r\n\r\n        this.props.stars.forEach((p,i) => {   \r\n            ctx.fillStyle = p.color;\r\n            ctx.fillRect(\r\n                p.x*canvas.width,\r\n                p.y*canvas.height,\r\n                2,  //p.position.x+1, //adds some funk\r\n                2  //p.position.y+1,\r\n            );\r\n        });\r\n\r\n        this.props.boids.particles.forEach((group,j) => {\r\n\r\n            if(j === 0)  {\r\n                group.particles.forEach((p,i) => {\r\n                    if(this.props.bodies.saturn) {\r\n                        //console.log(p)\r\n                        p.boid.attractor.x = this.canvas.clientWidth*0.5  + this.props.bodies.saturn.position.x*this.props.px_per_meter;\r\n                        p.boid.attractor.y = this.canvas.clientHeight*0.5 - this.props.bodies.saturn.position.y*this.props.px_per_meter;\r\n                        p.boid.attractor.z = this.canvas.clientWidth*0.5  + this.props.bodies.saturn.position.z*this.props.px_per_meter;\r\n                    }\r\n                    p.boid.swirl.x = p.boid.attractor.x;\r\n                    p.boid.swirl.y = p.boid.attractor.y;\r\n                    p.boid.swirl.z = p.boid.attractor.z;\r\n                    \r\n                    //instead we could find the nearest neighbor planet and attract to that\r\n\r\n                    let r = Math.floor(10+(i/group.particles.length)*90);\r\n\r\n                    ctx.fillStyle = p.color;\r\n                    ctx.fillRect(\r\n                        p.position.x,\r\n                        p.position.y,\r\n                        2,  //p.position.x+1, //adds some funk\r\n                        2  //p.position.y+1,\r\n                    );\r\n                });\r\n            }\r\n            if(j === 1) {\r\n                group.particles.forEach((p,i) => {   \r\n                    ctx.fillStyle = p.color;\r\n                    ctx.fillRect(\r\n                        p.position.x,\r\n                        p.position.y,\r\n                        2,  //p.position.x+1, //adds some funk\r\n                        2  //p.position.y+1,\r\n                    );\r\n                });\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    addDraw(f) {\r\n        if(typeof f === 'function') this.drawFuncs.push(f);\r\n    }\r\n\r\n    drawFuncs = []; // draw(input,args,origin,cmd){} <--- passes operator args\r\n\r\n    magnitude(vec={}) { //nDimensional magnitude\r\n        let sqrd = 0;\r\n        Object.keys(vec).forEach((c) => {\r\n            sqrd+=vec[c]*vec[c];\r\n        })\r\n        return Math.sqrt(sqrd);\r\n    }\r\n\r\n    distance(point1={}, point2={}) { //nDimensional vector distance function\r\n        let dsqrd = 0;\r\n        Object.keys(point1).forEach((c,i) => {\r\n            let pp = (point2[c] - point1[c]);\r\n            dsqrd += pp*pp;\r\n        })\r\n        return Math.sqrt(dsqrd);\r\n    }\r\n\r\n    makeVec(point1={},point2={}) {  //Make vector from two nDimensional points (arrays)\r\n        var vec = {};\r\n        Object.keys(point1).forEach((c,i) => {\r\n            vec[c] = point2[c] - point1[c];\r\n        })\r\n        return vec;\r\n    }\r\n\r\n    normalize(vec={}) { //nDimensional normalization\r\n        let _mag = 1/this.magnitude(vec);\r\n        let vecn = {};\r\n        Object.keys(vec).forEach((c,i) => {\r\n            vecn[c] = vec[c]*_mag;\r\n        })\r\n        return vecn;\r\n    }\r\n    \r\n    //angle in xy plane from positive x-axis\r\n    calcAzimuth(position={x:1,y:1,z:0}) {\r\n        return Math.atan2(position.x,position.y);\r\n    }\r\n    \r\n    //z angle from origin\r\n    calcZenith(position={x:1,y:0,z:1}) {\r\n        return Math.acos(position.z/this.magnitude(position));\r\n    }\r\n\r\n    sphereCollision(body1,body2) {\r\n        let dist = this.distance(body1.position,body2.position);\r\n        if(dist < body1.radius + body2.radius) {\r\n            return (body1.radius + body2.radius) - dist; //overlap dist\r\n        } \r\n        return false; //no overlap\r\n    }\r\n    \r\n    //newton's gravity and third law for spherical masses\r\n    newtonianMechanics(body1,body2,tstep) {\r\n        if(!body1.mass || !body2.mass) return;\r\n        if(body1.mass == 0 && body2.mass === 0) return;\r\n        \r\n        //Gravitational pull of nBodies\r\n        \r\n        let dist = this.distance(body1.position,body2.position);\r\n        let vecn = this.normalize(this.makeVec(body1.position,body2.position)); // a to b\r\n\r\n        let isColliding = this.sphereCollision(body1,body2); //This will miss if the bodies move past each other faster than a frame (have to do curr/prev comparison method instead or a faster dynamic model)\r\n     \r\n        if(isColliding) { //add a displaceent if there is overlap\r\n            let sumMass = body1.mass+body2.mass;\r\n            let ratio = body1.mass/sumMass; //displace proportional to mass\r\n            let rmin = 1-ratio;\r\n\r\n            if(body1.fixed === false) {\r\n                body1.position.x += vecn.x*isColliding*rmin*1.01;\r\n                body1.position.y += vecn.y*isColliding*rmin*1.01;\r\n                body1.position.z += vecn.z*isColliding*rmin*1.001;\r\n            } else {\r\n                body2.position.x -= vecn.x*isColliding*1.01;\r\n                body2.position.y -= vecn.y*isColliding*1.01;\r\n                body2.position.z -= vecn.z*isColliding*1.01;\r\n            }\r\n            if(body2.fixed === false) {\r\n                body2.position.x += vecn.x*isColliding*ratio*1.01;\r\n                body2.position.y += vecn.y*isColliding*ratio*1.01;\r\n                body2.position.z += vecn.z*isColliding*ratio*1.01;\r\n            } else {\r\n                body1.position.x += vecn.x*isColliding*1.01;\r\n                body1.position.y += vecn.y*isColliding*1.01;\r\n                body1.position.z += vecn.z*isColliding*1.01;\r\n            }\r\n\r\n            dist = this.distance(body1.position,body2.position);\r\n\r\n            let vrel = {\r\n                x:body1.velocity.x - body2.velocity.x,\r\n                y:body1.velocity.y - body2.velocity.y,\r\n                z:body1.velocity.z - body2.velocity.z\r\n            };\r\n\r\n            let speed = vrel.x*vecn.x + vrel.y*vecn.y + vrel.z*vecn.z;\r\n\r\n            if(speed > 0) {\r\n                let impulse = 2*speed/sumMass;\r\n                if(body1.fixed === false) {\r\n                    body1.velocity.x -= impulse*vecn.x*body2.mass*body1.restitution///body1.mass;\r\n                    body1.velocity.y -= impulse*vecn.y*body2.mass*body1.restitution///body1.mass;\r\n                    body1.velocity.z -= impulse*vecn.z*body2.mass*body1.restitution///body1.mass;\r\n                }\r\n\r\n                if(body2.fixed === false) {\r\n                    body2.velocity.x += impulse*vecn.x*body2.mass*body2.restitution/body2.mass;\r\n                    body2.velocity.y += impulse*vecn.y*body2.mass*body2.restitution/body2.mass;\r\n                    body2.velocity.z += impulse*vecn.z*body2.mass*body2.restitution/body2.mass;\r\n                }\r\n            }\r\n            //if(!body1.collidedWith[body2.tag] && !body1.prevCollidedWith[body2.tag]) {\r\n            //}\r\n            // body1.collidedWith[body2.tag] = body2.tag;\r\n            // body2.collidedWith[body1.tag] = body1.tag;\r\n            \r\n        }\r\n\r\n        let mass1Inv = 1/body1.mass;\r\n        let mass2Inv = 1/body2.mass;\r\n    \r\n        //Newton's law of gravitation\r\n        let Fg = 0.00000000006674 * body1.mass * body2.mass / (dist*dist);\r\n\r\n        //Get force vectors\r\n        let FgOnBody1 = {x: vecn.x*Fg, y: vecn.y*Fg, z: vecn.z*Fg};\r\n        let FgOnBody2 = {x:-vecn.x*Fg, y:-vecn.y*Fg, z:-vecn.z*Fg};\r\n        \r\n        if(!body1.fixed) {\r\n            body1.velocity.x += tstep*FgOnBody1.x*mass1Inv;\r\n            body1.velocity.y += tstep*FgOnBody1.y*mass1Inv;\r\n            body1.velocity.z += tstep*FgOnBody1.z*mass1Inv;\r\n        }\r\n            \r\n        if(!body2.fixed) {\r\n            body2.velocity.x += tstep*FgOnBody2.x*mass2Inv;\r\n            body2.velocity.y += tstep*FgOnBody2.y*mass2Inv;\r\n            body2.velocity.z += tstep*FgOnBody2.z*mass2Inv;\r\n        }\r\n\r\n\r\n        //need to limit the number of collisions\r\n        \r\n    }\r\n\r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n\r\n        this.canvas = this.querySelector('canvas');\r\n\r\n        if(props.meter_per_px) props.px_per_meter = 1/props.meter_per_px;\r\n\r\n        if(props.width) {\r\n            this.canvas.width = props.width;\r\n            this.canvas.style.height = props.height;\r\n        }\r\n        if(props.height) {\r\n            this.canvas.height = props.height;\r\n            this.canvas.style.height = props.height;\r\n        }\r\n        if(props.style) {\r\n            this.canvas.style = props.style;\r\n            setTimeout(()=>{\r\n                this.canvas.height = this.canvas.clientHeight;\r\n                this.canvas.width = this.canvas.clientWidth;\r\n\r\n                if(props.useCanvas) {\r\n                    //do some setup\r\n                    if(!props.nstars) {\r\n                        props.nstars = 200;\r\n                    }\r\n                    if(!props.nboids) {\r\n                        props.nboids = 100;\r\n                    }\r\n\r\n                    props.stars = [];\r\n                    let ct = 0;\r\n                    while(ct < props.nstars) {\r\n                        let white = Math.floor(Math.random()*100);\r\n                        if(white < 20) white = 20;\r\n                        props.stars.push({\r\n                            x:Math.random(),\r\n                            y:Math.random(),\r\n                            z:Math.random(),\r\n                            color:`#${white}${white}${white}`\r\n                        });\r\n                        ct++;\r\n                    }\r\n\r\n                    let rules = [['boids',props.nboids],['default',200]];\r\n                    props.boids = new DynamicParticles(rules,this.canvas,false);\r\n                    this.props.boids.particles.forEach((group,j) => {\r\n                        if(j === 0) {\r\n                            group.particles.forEach((p,i) => {\r\n                                p.maxSpeed = 70;\r\n                                p.boid.separation = 0.1;\r\n                                p.boid.attractor.mul = 0.02;\r\n                                p.boid.swirl.mul = 0.1;\r\n                                let r = Math.floor(Math.random()*100);\r\n                                if(r < 10) r = 10;\r\n                                p.color=`#${r}DDFF`;\r\n                                \r\n                            });\r\n                        }\r\n                        if(j === 1) {\r\n                            group.particles.forEach((p,i) => {\r\n                                p.velocity = {\r\n                                    x:Math.random()*10-5,\r\n                                    y:Math.random()*10-5,\r\n                                    z:Math.random()*10-5\r\n                                }\r\n                                let r = Math.floor(Math.random()*100);\r\n                                if(r < 30) r = 30;\r\n                                let g = Math.floor(Math.random()*100);\r\n                                if(g < 30) g = 30;\r\n                                let b = Math.floor(Math.random()*100);\r\n                                if(b < 30) b = 30;\r\n                                p.color = `#${r}${g}${b}`;\r\n                            });\r\n                        }\r\n                    })\r\n                }\r\n\r\n            },10); //slight recalculation delay time\r\n        }\r\n\r\n        props.canvas = this.canvas;\r\n        if(props.context) props.context = this.canvas.getContext(props.context);\r\n        else props.context = this.canvas.getContext('2d');\r\n        this.context = props.context;\r\n        this.ctx = this.context;\r\n        props.ctx = this.context;\r\n\r\n        setTimeout(()=>{\r\n            if(props.animate) {\r\n                props.now = Date.now();\r\n                props.node.runAnimation();\r\n            }\r\n        },10)\r\n\r\n    }\r\n\r\n    //after rendering\r\n    onresize=(props)=>{\r\n        if(this.canvas) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n            this.canvas.style.width = this.canvas.clientWidth;\r\n            this.canvas.style.height = this.canvas.clientHeight;\r\n            props.width = this.canvas.clientWidth;\r\n            props.height = this.canvas.clientHeight;\r\n        }\r\n\r\n        let bodies = props.bodies;\r\n        let keys = Object.keys(bodies);\r\n\r\n        for(let i = 0; i < bodies.length; i++) {\r\n            if(bodies[keys[i]].props.display === false && bodies[keys[i]].props.display === 'none') //scale the html elements\r\n            {\r\n                bodies[keys[i]].div.style.height = 2*bodies[keys[i]].radius/props.meter_per_px;\r\n                bodies[keys[i]].div.style.width = 2*bodies[keys[i]].radius/props.meter_per_px;\r\n                bodies[keys[i]].div.style.borderRadius = bodies[keys[i]].radius/props.meter_per_px;\r\n            }\r\n        }\r\n\r\n    } //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\naddCustomElement(SpaceNode,'space-node');\r\n", "\r\nimport {addCustomElement} from 'fragelement';\r\n\r\nimport {NodeDiv} from '../acyclicgraph/graph.node'\r\n\r\n//let component = require('./physicsbody.node.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class PhysicsBodyNode extends NodeDiv {\r\n\r\n    \r\n    operator = (input,node,origin,cmd) => {\r\n        \r\n        let tstep;\r\n\r\n        if(typeof input === 'object') {\r\n            if(input.position) this.props.position = input.position;\r\n            if(input.velocity) this.props.velocity = input.velocity;\r\n            if(input.acceleration) this.props.acceleration = input.acceleration;\r\n            if(input.force) this.props.force = input.force;\r\n            if(input.tstep) tstep = input.tstep;\r\n        } else if (typeof input === 'number') {\r\n            tstep = input;\r\n        } else if (typeof input === 'string') {\r\n            tstep = parseInt(input);\r\n        } else {\r\n            \r\n        }\r\n\r\n        let f = this.props.force;\r\n        let a = this.props.acceleration;\r\n        let v = this.props.velocity;\r\n        let p = this.props.position;\r\n        \r\n        if(tstep && this.props.fixed === false) {\r\n            if(f.x) { \r\n                a.x+=f.x/this.props.mass;\r\n                f.x = 0;\r\n            }\r\n            if(f.y) {\r\n                a.y+=f.y/this.props.mass;\r\n                f.y = 0;\r\n            }\r\n            if(f.z) {\r\n                a.z+=f.z/this.props.mass;\r\n                f.z = 0;\r\n            }\r\n\r\n            // let vxn = v.x*tstep;\r\n            // let vyn = v.y*tstep;\r\n            // let vzn = v.z*tstep;\r\n\r\n            if(a.x) v.x+=a.x*tstep;//-this.props.vloss*vxn;\r\n            if(a.y) v.y+=a.y*tstep;//-this.props.vloss*vyn;\r\n            if(a.z) v.z+=a.z*tstep;//-this.props.vloss*vzn;\r\n            if(v.x) p.x+=v.x*tstep;\r\n            if(v.y) p.y+=v.y*tstep;\r\n            if(v.z) p.z+=v.z*tstep;\r\n\r\n            if(this.props.bounded) this.checkBoundaries(p,v);\r\n\r\n            // this.props.prevCollidedWith = this.props.collidedWith; //prevent overlapping collisions from adding too many forces etc on.\r\n            // this.props.collidedWith = {};                \r\n\r\n            //update reference values\r\n            this.props.distance = this.magnitude(this.props.position);\r\n            this.props.azimuth = this.calcAzimuth(this.props.position);\r\n            this.props.zenith = this.calcZenith(this.props.position,this.props.distance);\r\n\r\n            if(this.parentNode.props?.useHTML  || !this.parentNode.props) {\r\n                this.props.div.style.left = (this.parentNode.clientWidth*0.5+this.props.position.x/this.parentNode.props.meter_per_px)+'px';\r\n                this.props.div.style.top = (this.parentNode.clientHeight*0.5-this.props.position.y/this.parentNode.props.meter_per_px)+'px';\r\n                let z = Math.floor(this.props.position.z/this.parentNode.props.meter_per_px);\r\n                if(this.parentNode.props.zind > z) {this.parentNode.props.zind = z;}\r\n                let pind = parseInt(this.parentNode.props.canvas.style.zIndex);\r\n                if(!pind) pind = 1;\r\n                this.props.div.style.zIndex = z + pind - this.parentNode.props.zind;\r\n            }\r\n        }\r\n\r\n        return input; \r\n\r\n    }\r\n\r\n    props={\r\n        mass:5.972e24,              //kg  //e.g. earth's mass\r\n        radius:6.3781e9,            //body radius (m)   //e.g. earth's radius\r\n        distance:undefined, //distance from origin, can be used to set initial position with theta and azimuth\r\n        theta:undefined,   //xy circular angle (0-365 deg), can set this instead of initial position\r\n        azimuth:undefined, //z angle (0 - 180 deg), can set this instead of initial position coordinates \r\n        position:{x:150e9,y:0,z:0}, //center is origin (0,0,0), position represents distance from center (m)\r\n        velocity:{x:0,y:0,z:0}, //m/s\r\n        acceleration:{x:0,y:0,z:0}, //m/s^2\r\n        force:{x:0,y:0,z:0},        //Newtons \r\n        restitution:0.01,\r\n        vloss:0.00000000000001,                  //velocity loss multiplier (loss = 1-vloss), this causes more loss at higher speeds\r\n        fixed:false,\r\n        bounded:true, //bounded by parentNode clientRect\r\n        // collidedWith:{}, //last tick \r\n        // prevCollidedWith:{}, //last last tick\r\n        operator:this.operator, //Operator to handle I/O on this node. Returned inputs can propagate according to below settings\r\n        forward:true, //pass output to child nodes\r\n        backward:false, //pass output to parent node\r\n        children:undefined, //child node(s), can be tags of other nodes, properties objects like this, or graphnodes, or null\r\n        parent:undefined, //parent graph node\r\n        delay:false, //ms delay to fire the node\r\n        repeat:false, // set repeat as an integer to repeat the input n times\r\n        recursive:false, //or set recursive with an integer to pass the output back in as the next input n times\r\n        animate:false, //true or false\r\n        loop:undefined, //milliseconds or false\r\n        tag:undefined, //generated if not specified, or use to get another node by tag instead of generating a new one\r\n        input:undefined,// can set on the attribute etc\r\n        graph:undefined, //parent AcyclicGraph instance, can set manually or via enclosing acyclic-graph div\r\n        node:undefined, //GraphNode instance, can set manually or as a string to grab a node by tag (or use tag)\r\n    }; //can specify properties of the element which can be subscribed to for changes.\r\n\r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=(props)=>{\r\n        let display = `''`;\r\n        if(props.display === false || props.display === 'none' || this.parentNode.props?.useHTML === false) display = `'none'`; //can not display the html element (e.g. to use canvas)\r\n\r\n        if(this.parentNode.props?.useHTML === false) return ``;\r\n\r\n        let style;\r\n        if(props.img) \r\n            return `\r\n                <div>\r\n                    <img src=${props.img} height=\"100%\" width=\"100%\" style=\"position:absolute;\"></img>\r\n                </div>\r\n            `;\r\n        else if (props.style) style = props.style;\r\n        else style = `\"display:${display}; background-color:blue;\"`;\r\n\r\n        return `\r\n            <div style=${style}></div>\r\n        `;\r\n    };\r\n\r\n\r\n    d2r(d) {\r\n        return Math.PI*d/180;\r\n    }\r\n\r\n    r2d(r) {\r\n        return 180*r/Math.PI;\r\n    }\r\n\r\n    magnitude(vec={}) { //nDimensional magnitude\r\n        let sqrd = 0;\r\n        Object.keys(vec).forEach((c) => {\r\n            sqrd+=vec[c]*vec[c];\r\n        })\r\n        return Math.sqrt(sqrd);\r\n    }\r\n\r\n    distance(point1={}, point2={}) { //nDimensional vector distance function\r\n        let dsqrd = 0;\r\n        Object.keys(point1).forEach((c,i) => {\r\n            let pp = (point2[c] - point1[c]);\r\n            dsqrd += pp*pp;\r\n        })\r\n        return Math.sqrt(dsqrd);\r\n    }\r\n\r\n    makeVec(point1={},point2={}) {  //Make vector from two nDimensional points (arrays)\r\n        var vec = {};\r\n        Object.keys(point1).forEach((c,i) => {\r\n            vec[c] = point2[c] - point1[c];\r\n        })\r\n        return vec;\r\n    }\r\n\r\n    normalize(vec={}) { //nDimensional normalization\r\n        let _mag = 1/this.magnitude(vec);\r\n        let vecn = {};\r\n        Object.keys(vec).forEach((c,i) => {\r\n            vecn[c] = vec[c]*_mag;\r\n        })\r\n        return vecn;\r\n    }\r\n\r\n    //angle in xy plane from positive x-axis\r\n    calcAzimuth(position={x:1,y:1,z:0}) {\r\n        return Math.atan2(position.x,position.y);\r\n    }\r\n    \r\n    //z angle from origin\r\n    calcZenith(position={x:1,y:0,z:1}, magnitude=this.magnitude(position)) {\r\n        if(magnitude) return Math.acos(position.z/magnitude);\r\n        let mag = this.magnitude(position)\r\n        if(mag = 0) return 0;\r\n        return Math.acos(position.z/mag);\r\n    }\r\n\r\n    //set azimuth xy-plane angle from +x-axis (rad)\r\n    setAzimuth(az) {\r\n        this.props.azimuth = az;\r\n        props.position.z = props.distance*Math.sin(2*props.azimuth);\r\n    }\r\n\r\n    //zenith z-angle from +z-axis (rad)\r\n    setZenith(zen) {\r\n        this.props.theta = zen;\r\n        this.props.position.x = this.props.distance*Math.cos(this.props.theta);\r\n        this.props.position.y = this.props.distance*Math.sin(this.props.theta);\r\n    }\r\n\r\n    checkBoundaries = (position, velocity) => {\r\n        //this.props.position.x \r\n        let prect = this.parentNode.getBoundingClientRect();\r\n        //let rect = this.getBoundingClientRect();\r\n\r\n        let _mpx = 1/this.parentNode.props.meter_per_px;\r\n\r\n        //absolute pixel values of position\r\n        let pxx = prect.left+this.parentNode.clientWidth*0.5 - position.x*_mpx;\r\n        let pxy = prect.top+this.parentNode.clientHeight*0.5 - position.y*_mpx;\r\n        let pxz = prect.left+this.parentNode.clientWidth*0.5 - position.z*_mpx;\r\n\r\n        let rs = this.props.radius*_mpx;\r\n\r\n        //if(this.props.tag === 'sun') console.log(pxx+rs,prect.left,prect.right);\r\n\r\n        if(pxx+rs >= prect.right) {\r\n            position.x = -(this.parentNode.clientWidth*0.5)*this.parentNode.props.meter_per_px + this.props.radius;\r\n            if(velocity.x < 0) velocity.x = -velocity.x;\r\n        }\r\n        if(pxx-rs <= prect.left) {\r\n            position.x = (this.parentNode.clientWidth*0.5)*this.parentNode.props.meter_per_px - this.props.radius;\r\n            if(velocity.x > 0) velocity.x = -velocity.x;\r\n        }\r\n\r\n        //if(this.props.tag === 'sun') console.log(pxy-rs,prect.bottom)\r\n        if(pxy-rs <= prect.top) {\r\n            position.y = (this.parentNode.clientHeight*0.5)*this.parentNode.props.meter_per_px - this.props.radius;\r\n            if(velocity.y > 0) velocity.y = -velocity.y;\r\n        }\r\n        if(pxy+rs >= prect.bottom) {\r\n            position.y = (this.parentNode.clientHeight*0.5 - (prect.bottom-prect.top))*this.parentNode.props.meter_per_px + this.props.radius;\r\n            if(velocity.y < 0) velocity.y = -velocity.y;\r\n        }\r\n\r\n        if(pxz+rs >= prect.right) {\r\n            position.z = -(this.parentNode.clientWidth*0.5)*this.parentNode.props.meter_per_px + this.props.radius;\r\n            if(velocity.z < 0) velocity.z = -velocity.z;\r\n        }\r\n        if(pxz-rs <= prect.left) {\r\n            position.z = (this.parentNode.clientWidth*0.5)*this.parentNode.props.meter_per_px - this.props.radius;\r\n            if(velocity.z > 0) velocity.z = -velocity.z;\r\n        }\r\n    }\r\n\r\n    //set position using the spherical coordinats\r\n    setPositionFromSpherical(props) {\r\n        \r\n        if(!props.distance) {\r\n            props.distance = this.magnitude(props.position);\r\n            \r\n            if(props.azimuth) {\r\n                props.position.z = props.distance*Math.sin(2*props.azimuth);\r\n                props.div.style.top = (this.parentNode.clientHeight*0.5-props.position.y/this.parentNode.props.meter_per_px)+'px';\r\n            } else {\r\n                props.azimuth = this.calcZenith(props.position);\r\n            }\r\n            if(props.theta) {\r\n                props.position.x = props.distance*Math.cos(props.theta);\r\n                props.position.y = props.distance*Math.sin(props.theta);\r\n                props.div.style.left = (this.parentNode.clientWidth*0.5-props.position.x/this.parentNode.props.meter_per_px)+'px';\r\n            } else {\r\n                props.theta = this.calcAzimuth(props.position);\r\n            }\r\n        } else {\r\n            if(!props.azimuth) {\r\n                props.azimuth = this.calcZenith(props.position);\r\n            }\r\n            props.position.z = props.distance*Math.sin(2*props.azimuth);\r\n            if(!props.theta) {\r\n                props.theta = this.calcAzimuth(props.position);\r\n            }\r\n            props.position.x = props.distance*Math.cos(props.theta);\r\n            props.position.y = props.distance*Math.sin(props.theta);\r\n            \r\n            if(this.parentNode.props?.useHTML || !this.parentNode.props) {\r\n                props.div.style.left = (this.parentNode.clientWidth*0.5+props.position.x/this.parentNode.props.meter_per_px)+'px';\r\n                props.div.style.top = (this.parentNode.clientHeight*0.5-props.position.y/this.parentNode.props.meter_per_px)+'px';\r\n                let z = Math.floor(props.position.z/this.parentNode.props.meter_per_px);\r\n                if(Math.abs(this.parentNode.props.zind) > z) {this.parentNode.props.zind = z}\r\n                props.div.style.zIndex = z + parseInt(this.parentNode.props.canvas.style.zIndex) + this.parentNode.props.zind;\r\n            }\r\n        }\r\n    }\r\n\r\n    //gotta customize this a little from the default DOMElement\r\n    render = (props=this.props) => {\r\n\r\n        if(typeof this.template === 'function') this.templateString = this.template(props); //can pass a function\r\n        else this.templateString = this.template;\r\n\r\n        //this.innerHTML = this.templateString;\r\n\r\n        const t = document.createElement('template');\r\n        t.innerHTML = this.templateString;\r\n        const fragment = t.content;\r\n        if(this.fragment) { //will reappend the fragment without reappending the whole node if already rendered once\r\n            this.removeChild(this.fragment); \r\n        }\r\n        this.fragment = fragment;\r\n        this.appendChild(fragment);\r\n        \r\n        \r\n        //add this here which will run a routine AFTER rendering so the elements can be updated\r\n        this.setupNode(this.props);\r\n        if(this.props.input) { //e.g. run the node on input\r\n            setTimeout(async()=>{\r\n                this.props.node.runNode(this.props.node,this.props.input,this.props.graph); //run the inputs on the nodes once the children are loaded on the DOM so things propagate correctly\r\n            },\r\n            this.input_delay //makes sure children are loaded (e.g. on a DOM with a lot of loading, should add some execution delay to anticipate it as initial nodes are not aware of later-rendered nodes on the DOM)\r\n            );\r\n        }\r\n\r\n        this.setupPhysicsBody(props); //setup the physics logic\r\n        \r\n        if(this.oncreate) this.oncreate(props); //set scripted behaviors\r\n    }\r\n\r\n    setupPhysicsBody(props) {\r\n        \r\n        if(typeof props.px === 'number') props.position.x = props.px;\r\n        if(typeof props.py === 'number') props.position.y = props.py;\r\n        if(typeof props.pz === 'number') props.position.z = props.pz;\r\n        if(typeof props.vx === 'number') props.velocity.x = props.vx;\r\n        if(typeof props.vy === 'number') props.velocity.y = props.vy;\r\n        if(typeof props.vz === 'number') props.velocity.z = props.vz;\r\n\r\n        let div = this.querySelector('div');\r\n        props.div = div;\r\n\r\n        let rad = props.radius;\r\n        if(this.parentNode?.props?.meter_per_px) {\r\n            rad = rad/this.parentNode.props.meter_per_px;\r\n        }\r\n\r\n        if(this.parentNode.props?.useHTML || !this.parentNode.props) {\r\n            let left = this.parentNode.clientWidth*0.5+props.position.x/this.parentNode.props.meter_per_px;\r\n            let top = this.parentNode.clientHeight*0.5-props.position.y/this.parentNode.props.meter_per_px;\r\n\r\n            div.style.position = 'absolute';\r\n            div.style.height = 2*rad+'px';\r\n            div.style.width = 2*rad+'px';\r\n            div.style.borderRadius = rad+'px';\r\n            div.style.left = left+'px';\r\n            div.style.top = top+'px';\r\n            div.style.transform = 'translate(-'+rad+'px,-'+rad+'px)';\r\n\r\n            if(this.style.backgroundColor) div.style.backgroundColor = this.style.backgroundColor;\r\n        }\r\n        this.setPositionFromSpherical(props);\r\n\r\n        this.dragElement(div);\r\n\r\n        if(this.parentNode.props?.bodies) this.parentNode.props.bodies[props.tag] = props;\r\n    }\r\n\r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n\r\n    } //after rendering\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n\r\n    dragElement = (elmnt) => {\r\n      \r\n        const dragMouseDown = (e) => {\r\n          e = e || window.event;\r\n          e.preventDefault();\r\n          // get the mouse cursor position at startup:\r\n\r\n          // call a function whenever the cursor moves:\r\n          let cancel = false;\r\n          setTimeout(() => {\r\n            if(!cancel) {\r\n                document.onmouseup = closeDragElement;\r\n                document.onmousemove = elementDrag;\r\n            }\r\n          },200); //don't accidentally drag if you want to just click\r\n          document.onmouseup = () => {\r\n            cancel = true;\r\n          }\r\n        }\r\n      \r\n        const elementDrag = (e) => {\r\n          e = e || window.event;\r\n          e.preventDefault();\r\n          // calculate the new cursor position:\r\n\r\n          if(this.parentNode.props?.meter_per_px) {\r\n              let rect = this.parentNode.getBoundingClientRect()\r\n            this.props.position.x = -(this.parentNode.clientWidth*0.5 + rect.x - e.clientX)*this.parentNode.props.meter_per_px;\r\n            this.props.position.y = (this.parentNode.clientHeight*0.5 + rect.y - e.clientY)*this.parentNode.props.meter_per_px;\r\n            this.props.velocity.x = 0;\r\n            this.props.velocity.y = 0;\r\n          }\r\n          // set the element's new position:\r\n          if(this.parentNode.props?.useHTML || !this.parentNode.props) {\r\n            elmnt.style.top =  e.clientY + \"px\";\r\n            elmnt.style.left = e.clientX + \"px\";\r\n          }\r\n        }\r\n      \r\n        const closeDragElement = () => {\r\n          // stop moving when mouse button is released:\r\n          document.onmouseup = null;\r\n          document.onmousemove = null;\r\n        }\r\n    \r\n\r\n        if (elmnt) {\r\n            // otherwise, move the DIV from anywhere inside the DIV:\r\n            elmnt.style.cursor = 'pointer';\r\n            elmnt.onmousedown = dragMouseDown;\r\n        }\r\n    }\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\naddCustomElement(PhysicsBodyNode,'physics-body');\r\n", "\r\nimport {DOMElement} from 'fragelement';\r\n\r\nlet component = require('./planet_tag.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class PlanetTag extends DOMElement {\r\n    props={\r\n        tag:'',\r\n        direction:'top',\r\n        color:'rgba(0,0,0,0.8)'\r\n    } //can specify properties of the element which can be subscribed to for changes.\r\n    \r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        //set up the business logic for the component\r\n        let div = this.querySelector('div');\r\n        div.style.backgroundColor = props.color;\r\n        props.div = div;\r\n        let p = this.querySelector('p');\r\n        if(props.tag) p.insertAdjacentHTML('beforebegin',props.tag+'</br>');\r\n\r\n        // let arrow = document.createElement('div');\r\n\r\n        // if(props.direction === 'up') {\r\n        //     Object.assign(arrow.style,{\r\n        //         position:'absolute',\r\n        //         width: 0, \r\n        //         height: 0, \r\n        //         borderLeft: '5px solid transparent',\r\n        //         borderRight: '5px solid transparent',\r\n        //         borderBottom: `15px solid ${props.color}`,\r\n        //         transform:'translateX(50%)'\r\n        //     });\r\n        // } else if (props.direction === 'down') {\r\n\r\n        // }\r\n\r\n    }\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nPlanetTag.addElement('planet-tag');\r\n", "import { PhysicsBodyNode } from \"../physicsbody.node\";\r\nimport '../../popups/planet_tag'\r\n\r\nconst TWOPI = Math.PI*2;\r\n\r\nexport class PlanetEarth extends PhysicsBodyNode {\r\n\r\n    nClicks=false;\r\n\r\n    startTime=Date.now();\r\n\r\n    oncreate=(props)=>{\r\n        let div = this.querySelector('div');\r\n\r\n        this.props.div = div;\r\n\r\n        //add antennas\r\n        let tri = document.createElement('div');\r\n        let dot = document.createElement('div');\r\n\r\n        props.ndot = dot;\r\n\r\n        Object.assign(tri.style,{\r\n            position:'absolute',\r\n            width: 0, \r\n            height: 0, \r\n            borderLeft: '3px solid transparent',\r\n            borderRight: '3px solid transparent',\r\n            borderBottom: '15px solid rgba(50,50,50,0.8)',\r\n            transform:'rotate(-30deg)',\r\n            left:this.parentNode.props.px_per_meter*props.radius*-0.5+'px',\r\n            top:`-${this.parentNode.props.px_per_meter*props.radius*1.75}px`\r\n        });\r\n\r\n        Object.assign(dot.style,{\r\n            position:'absolute',\r\n            width: '6px', \r\n            height: '6px', \r\n            borderRadius:'3px',\r\n            backgroundColor:'darkred',\r\n            left:this.parentNode.props.px_per_meter*props.radius*-1.3+'px',\r\n            top:`-${this.parentNode.props.px_per_meter*props.radius*2.5}px`\r\n        })\r\n\r\n        div.appendChild(tri);\r\n        div.appendChild(dot);\r\n\r\n        \r\n        let tri2 = document.createElement('div');\r\n        let dot2 = document.createElement('div');\r\n\r\n        props.pdot = dot2;\r\n\r\n        Object.assign(tri2.style,{\r\n            position:'absolute',\r\n            width: 0, \r\n            height: 0, \r\n            borderLeft: '3px solid transparent',\r\n            borderRight: '3px solid transparent',\r\n            borderBottom: '15px solid rgba(50,50,50,0.8)',\r\n            transform:'rotate(-210deg)',\r\n            left:this.parentNode.props.px_per_meter*props.radius*1.4+'px',\r\n            top:`${this.parentNode.props.px_per_meter*props.radius*1.5}px`\r\n        });\r\n\r\n        Object.assign(dot2.style,{\r\n            position:'absolute',\r\n            width: '6px', \r\n            height: '6px', \r\n            borderRadius:'3px',\r\n            backgroundColor:'darkred',\r\n            left:this.parentNode.props.px_per_meter*props.radius*2.2+'px',\r\n            top:`${this.parentNode.props.px_per_meter*props.radius*3.5}px`\r\n        })\r\n\r\n        div.appendChild(tri2);\r\n        div.appendChild(dot2);\r\n\r\n        let tri3 = document.createElement('div');\r\n        let dot3 = document.createElement('div');\r\n\r\n        props.npdot = dot3;\r\n\r\n        Object.assign(tri3.style,{\r\n            position:'absolute',\r\n            width: 0, \r\n            height: 0, \r\n            borderLeft: '3px solid transparent',\r\n            borderRight: '3px solid transparent',\r\n            borderBottom: '15px solid rgba(50,50,50,0.8)',\r\n            transform:'rotate(-130deg)',\r\n            left:this.parentNode.props.px_per_meter*props.radius*-0.8+'px',\r\n            top:`${this.parentNode.props.px_per_meter*props.radius}px`\r\n        });\r\n\r\n        Object.assign(dot3.style,{\r\n            position:'absolute',\r\n            width: '6px', \r\n            height: '6px', \r\n            borderRadius:'3px',\r\n            backgroundColor:'darkred',\r\n            left:this.parentNode.props.px_per_meter*props.radius*-1.75+'px',\r\n            top:`${this.parentNode.props.px_per_meter*props.radius*2.5}px`\r\n        })\r\n\r\n        div.appendChild(tri3);\r\n        div.appendChild(dot3);\r\n        \r\n\r\n        div.onclick = (e) => {\r\n            this.nClicks++;\r\n            if(this.nClicks === 1) {\r\n                //make a cool thing happen\r\n            }\r\n            else if (this.nClicks === 2) {\r\n                //open a description popup with\r\n                //   links and stuff\r\n            }\r\n            else {\r\n                //close the beacon\r\n                \r\n                this.nClicks = 0;\r\n            }\r\n        }\r\n\r\n        div.onmouseover = (ev) => {\r\n            //add tag\r\n            // props.ptag = document.createElement('planet-tag');\r\n            // props.ptag.props.tag = 'Earth';\r\n            // div.appendChild(props.ptag);\r\n        }\r\n        \r\n        div.onmouseout = (ev) => {\r\n            //props.ptag.delete();\r\n        }\r\n    }\r\n}\r\n\r\nPlanetEarth.addElement('planet-earth');", "import {settings} from '../../../../node_server/server_settings'\r\nimport \"../../server/sse.component\";\r\nimport { PhysicsBodyNode } from \"../physicsbody.node\";\r\nimport '../../popups/planet_tag'\r\n\r\nlet component = require('./planet.python.html');\r\n\r\n\r\nconst TWOPI = Math.PI*2;\r\n\r\nexport class PlanetPython extends PhysicsBodyNode {\r\n\r\n    nClicks=0;\r\n    transmittingSSE = false;\r\n\r\n    startTime=Date.now();\r\n\r\n    //Python to Earth\r\n    drawPtoE = (input,node,origin,cmd) => {\r\n        //draw line/beaming anim from point A (here)\r\n        //   to point B (planet Node)\r\n        if(this.transmittingSSE) {\r\n            let phere = this.props.div.getBoundingClientRect();\r\n            let pthere = document.querySelector('planet-earth');\r\n            if(pthere) {\r\n                pthere = pthere.props.div.getBoundingClientRect();\r\n\r\n                if(this.parentNode?.props?.ctx) {\r\n                    let ctx = this.parentNode.props.ctx;\r\n                    \r\n                    let startx = 0.5*(phere.right+phere.left)-10;\r\n                    let starty = 0.5*(phere.bottom+phere.top)-10;\r\n                    let endx = 0.5*(pthere.right+pthere.left);\r\n                    let endy = 0.5*(pthere.bottom+pthere.top)-5;\r\n                    //ctx.clearRect(0,0,this.parentNode.props.canvas.width,this.parentNode.props.canvas.height);\r\n                    let grad = ctx.createLinearGradient(startx,starty,endx,endy);\r\n\r\n                    let curtime = (Math.PI+(Date.now()-this.startTime)*0.0031415) % TWOPI;\r\n                    if(curtime > Math.PI) curtime=0;\r\n                    let clock = Math.abs(Math.tanh(curtime));\r\n\r\n                    grad.addColorStop(0,'rgba(0,0,0,0)');\r\n                    let stop2 = clock-0.12;\r\n                    if(stop2 < 0) stop2 = 0;\r\n                    grad.addColorStop(stop2,'rgba(0,0,0,0)');\r\n                    grad.addColorStop(clock,'rgba(255,255,50,0.75)');\r\n                    let stop3 = clock+0.12;\r\n                    if(stop3 > 1) stop3 = 1;\r\n                    grad.addColorStop(stop3,'rgba(0,0,0,0)');\r\n                    grad.addColorStop(1,'rgba(0,0,0,0)');\r\n                    ctx.strokeStyle = grad;\r\n                    ctx.lineWidth=5;\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(startx,starty);\r\n                    ctx.lineTo(endx,endy);    \r\n                    ctx.stroke()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    oncreate=(props)=>{\r\n        let div = this.querySelector('div');\r\n\r\n        this.props.div = div;\r\n\r\n        if(this.parentNode?.drawFuncs) {\r\n            this.parentNode.drawFuncs.push(this.drawPtoE);\r\n            //this.parentNode.drawFuncs.push(this.drawPtoM);\r\n        }\r\n        \r\n        div.onmouseover = (ev) => {\r\n            //add tag\r\n            props.ptag = document.createElement('planet-tag');\r\n            props.ptag.props.tag = 'Python';\r\n            div.appendChild(props.ptag);\r\n        }\r\n        \r\n        div.onmouseout = (ev) => {\r\n            props.ptag.delete();\r\n        }\r\n\r\n        let tri = document.createElement('div');\r\n        let dot = document.createElement('div');\r\n\r\n        props.pdot = dot;\r\n\r\n        Object.assign(tri.style,{\r\n            position:'absolute',\r\n            width: 0, \r\n            height: 0, \r\n            borderLeft: '5px solid transparent',\r\n            borderRight: '5px solid transparent',\r\n            borderBottom: '15px solid rgba(50,50,50,0.8)',\r\n            transform:'rotate(25deg)',\r\n            left:this.parentNode.props.px_per_meter*props.radius*1.3+'px',\r\n            top:`-${this.parentNode.props.px_per_meter*props.radius*0.08}px`\r\n        });\r\n\r\n        Object.assign(dot.style,{\r\n            position:'absolute',\r\n            width: '6px', \r\n            height: '6px', \r\n            borderRadius:'3px',\r\n            backgroundColor:'darkred',\r\n            left:this.parentNode.props.px_per_meter*props.radius*1.43+'px',\r\n            top:`-${this.parentNode.props.px_per_meter*props.radius*0.2}px`\r\n        })\r\n\r\n        div.appendChild(tri);\r\n        div.appendChild(dot);\r\n\r\n        let earth = document.querySelector('planet-earth');\r\n\r\n        div.onclick = (e) => {\r\n            this.nClicks++;\r\n            if(this.nClicks === 1) {\r\n                //make the beacon appear and start beaming messages\r\n                //make the beacon appear and start beaming messages\r\n                dot.style.backgroundColor = 'gold';\r\n                setTimeout(()=>{\r\n                    dot.style.backgroundColor = 'brown';\r\n                },500);\r\n                //subscribe to sse\r\n                let sse = document.createElement('sse-');\r\n\r\n                sse.props.protocol = settings.protocol;\r\n                sse.props.host = settings.host;\r\n                sse.props.port = settings.python;\r\n\r\n                div.appendChild(sse);\r\n\r\n                props.sse=this.querySelector('sse-');\r\n\r\n                \r\n                if(props.sse.props.sse) {\r\n                    props.sse.props.sse.addEventListener('message',(ev)=>{\r\n                        if(!this.transmittingSSE) this.transmittingSSE = true;\r\n                        dot.style.backgroundColor = 'gold';\r\n                        if(earth) earth.props.pdot.style.backgroundColor = 'gold';\r\n                        setTimeout(()=>{\r\n                            if(this.transmittingSSE) {\r\n                                if(props.sse) dot.style.backgroundColor = 'brown';\r\n                                if(earth) earth.props.pdot.style.backgroundColor = 'brown';\r\n                            }\r\n                        },500);\r\n                        \r\n                    });\r\n\r\n                    props.sse.props.sse.addEventListener('close', ()=>{\r\n                        this.transmittingSSE = false;\r\n                    });\r\n                }\r\n                //do things on frontend\r\n            }\r\n            else if (this.nClicks === 2) {\r\n                //open a description popup with\r\n                //   links and stuff\r\n                let pwindow = document.createElement('portfolio-window');\r\n                \r\n                pwindow.props.innerTemplate = component;\r\n\r\n                document.body.appendChild(pwindow);\r\n                let windows = document.querySelectorAll('portfolio-window'); \r\n                props.pwindow = windows[windows.length-1];\r\n            }\r\n            else {\r\n                //close the beacon\r\n                dot.style.backgroundColor = 'darkred';\r\n                if(earth) earth.props.pdot.style.backgroundColor = 'darkred';\r\n                this.nClicks = 0;\r\n\r\n                if(props.sse) props.sse.delete();\r\n                this.transmittingSSE = false;\r\n                props.sse = undefined;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nPlanetPython.addElement('planet-python');", "import {settings} from '../../../../node_server/server_settings'\r\nimport \"../../server/socket.component\";\r\nimport '../../popups/planet_tag'\r\nimport { PhysicsBodyNode } from \"../physicsbody.node\";\r\n\r\nlet component = require('./planet.nodejs.html');\r\n\r\nconst TWOPI = Math.PI*2;\r\n\r\nexport class PlanetNodeJS extends PhysicsBodyNode {\r\n\r\n    nClicks=false;\r\n    transmittingWS=false;\r\n    transmittingPyToNode=false;\r\n\r\n    startTime=Date.now();\r\n    //Python to Node Planet\r\n    drawPtoN = (input,node,origin,cmd) => {\r\n        //draw line/beaming anim from point A (here)\r\n        //   to point B (planet Node)\r\n        if(this.transmittingPyToNode) {\r\n            let pthere = this.props.div.getBoundingClientRect();\r\n            let phere = document.querySelector('planet-python');\r\n            if(phere) {\r\n                phere = phere.props.div.getBoundingClientRect();\r\n\r\n                if(this.parentNode?.props?.ctx) {\r\n                    let ctx = this.parentNode.props.ctx;\r\n                    let startx = 0.5*(phere.right+phere.left)-5;\r\n                    let starty = 0.5*(phere.bottom+phere.top)-20;\r\n                    let endx = 0.5*(pthere.right+pthere.left)-5;\r\n                    let endy = 0.5*(pthere.bottom+pthere.top)-20\r\n                    //ctx.clearRect(0,0,this.parentNode.props.canvas.width,this.parentNode.props.canvas.height);\r\n                    let grad = ctx.createLinearGradient(startx,starty,endx,endy);\r\n\r\n                    let curtime = (Date.now()-this.startTime)*0.0031415 % TWOPI;\r\n                    if(curtime > Math.PI) curtime=0;\r\n                    let clock = Math.abs(Math.tanh(curtime));\r\n                    grad.addColorStop(0,'rgba(0,0,0,0)');\r\n                    let stop2 = clock-0.12;\r\n                    if(stop2 < 0) stop2 = 0;\r\n                    grad.addColorStop(stop2,'rgba(0,0,0,0)');\r\n                    grad.addColorStop(clock,'rgba(100,100,255,0.75)');\r\n                    let stop3 = clock+0.12;\r\n                    if(stop3 > 1) stop3 = 1;\r\n                    grad.addColorStop(stop3,'rgba(0,0,0,0)');\r\n                    grad.addColorStop(1,'rgba(0,0,0,0)');\r\n                    ctx.strokeStyle = grad;\r\n                    ctx.lineWidth=5;\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(startx,starty);\r\n                    ctx.lineTo(endx,endy);    \r\n                    //ctx.closePath();\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Node to Earth\r\n    drawNPtoE = (input,node,origin,cmd) => {\r\n        //draw line/beaming anim from point A (here)\r\n        //   to point B (planet Node)\r\n        if(this.transmittingPyToNode) {\r\n            let phere = this.props.div.getBoundingClientRect();\r\n            let pthere = document.querySelector('planet-earth');\r\n            if(pthere) {\r\n                pthere = pthere.props.div.getBoundingClientRect();\r\n\r\n                if(this.parentNode?.props?.ctx) {\r\n                    let ctx = this.parentNode.props.ctx;\r\n                    \r\n                    let startx = 0.5*(phere.right+phere.left)-10;\r\n                    let starty = 0.5*(phere.bottom+phere.top)+10;\r\n                    let endx = 0.5*(pthere.right+pthere.left);\r\n                    let endy = 0.5*(pthere.bottom+pthere.top)-5;\r\n                    //ctx.clearRect(0,0,this.parentNode.props.canvas.width,this.parentNode.props.canvas.height);\r\n                    let grad = ctx.createLinearGradient(startx,starty,endx,endy);\r\n\r\n                    let curtime = (Math.PI+(Date.now()-this.startTime)*0.0031415) % TWOPI;\r\n                    if(curtime > Math.PI) curtime=0;\r\n                    let clock = Math.abs(Math.tanh(curtime));\r\n\r\n                    grad.addColorStop(0,'rgba(0,0,0,0)');\r\n                    let stop2 = clock-0.12;\r\n                    if(stop2 < 0) stop2 = 0;\r\n                    grad.addColorStop(stop2,'rgba(0,0,0,0)');\r\n                    grad.addColorStop(clock,'rgba(100,100,255,0.75)');\r\n                    let stop3 = clock+0.12;\r\n                    if(stop3 > 1) stop3 = 1;\r\n                    grad.addColorStop(stop3,'rgba(0,0,0,0)');\r\n                    grad.addColorStop(1,'rgba(0,0,0,0)');\r\n                    ctx.strokeStyle = grad;\r\n                    ctx.lineWidth=5;\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(startx,starty);\r\n                    ctx.lineTo(endx,endy);    \r\n                    ctx.stroke()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //Node to Earth\r\n    drawNtoE = (input,node,origin,cmd) => {\r\n        //draw line/beaming anim from point A (here)\r\n        //   to point B (planet Node)\r\n        if(this.transmittingWS) {\r\n            let phere = this.props.div.getBoundingClientRect();\r\n            let pthere = document.querySelector('planet-earth');\r\n            if(pthere) {\r\n                pthere = pthere.props.div.getBoundingClientRect();\r\n\r\n                if(this.parentNode?.props?.ctx) {\r\n                    let ctx = this.parentNode.props.ctx;\r\n                    \r\n                    let startx = 0.5*(phere.right+phere.left)-10;\r\n                    let starty = 0.5*(phere.bottom+phere.top)-40;\r\n                    let endx = 0.5*(pthere.right+pthere.left);\r\n                    let endy = 0.5*(pthere.bottom+pthere.top)-5;\r\n                    //ctx.clearRect(0,0,this.parentNode.props.canvas.width,this.parentNode.props.canvas.height);\r\n                    let grad = ctx.createLinearGradient(startx,starty,endx,endy);\r\n\r\n                    let curtime = (Math.PI+(Date.now()-this.startTime)*0.0031415) % TWOPI;\r\n                    if(curtime > Math.PI) curtime=0;\r\n                    let clock = Math.abs(Math.tanh(curtime));\r\n\r\n                    grad.addColorStop(0,'rgba(0,0,0,0)');\r\n                    let stop2 = clock-0.12;\r\n                    if(stop2 < 0) stop2 = 0;\r\n                    grad.addColorStop(stop2,'rgba(0,0,0,0)');\r\n                    grad.addColorStop(clock,'rgba(100,255,100,0.75)');\r\n                    let stop3 = clock+0.12;\r\n                    if(stop3 > 1) stop3 = 1;\r\n                    grad.addColorStop(stop3,'rgba(0,0,0,0)');\r\n                    grad.addColorStop(1,'rgba(0,0,0,0)');\r\n                    ctx.strokeStyle = grad;\r\n                    ctx.lineWidth=5;\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(startx,starty);\r\n                    ctx.lineTo(endx,endy);    \r\n                    ctx.stroke()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    oncreate=(props)=>{\r\n        let div = this.querySelector('div');\r\n        \r\n        this.props.div = div;\r\n\r\n        if(this.parentNode?.drawFuncs) {\r\n            this.parentNode.drawFuncs.push(this.drawNtoE);\r\n            this.parentNode.drawFuncs.push(this.drawPtoN);\r\n            this.parentNode.drawFuncs.push(this.drawNPtoE);\r\n        }\r\n\r\n        div.onmouseover = (ev) => {\r\n            //add tag\r\n            props.ptag = document.createElement('planet-tag');\r\n            props.ptag.props.tag = 'NodeJS';\r\n            div.appendChild(props.ptag);\r\n        }\r\n        \r\n        div.onmouseout = (ev) => {\r\n            props.ptag.delete();\r\n        }\r\n\r\n        //add antennas\r\n        let tri = document.createElement('div');\r\n        let dot = document.createElement('div');\r\n\r\n        props.ndot = dot;\r\n\r\n        Object.assign(tri.style,{\r\n            position:'absolute',\r\n            width: 0, \r\n            height: 0, \r\n            borderLeft: '5px solid transparent',\r\n            borderRight: '5px solid transparent',\r\n            borderBottom: '15px solid rgba(50,50,50,0.8)',\r\n            transform:'rotate(-30deg)',\r\n            left:this.parentNode.props.px_per_meter*props.radius*0.4+'px',\r\n            top:`-${this.parentNode.props.px_per_meter*props.radius*-0.1}px`\r\n        });\r\n\r\n        Object.assign(dot.style,{\r\n            position:'absolute',\r\n            width: '6px', \r\n            height: '6px', \r\n            borderRadius:'3px',\r\n            backgroundColor:'darkred',\r\n            left:this.parentNode.props.px_per_meter*props.radius*0.34+'px',\r\n            top:`-${this.parentNode.props.px_per_meter*props.radius*0.1}px`\r\n        })\r\n\r\n        div.appendChild(tri);\r\n        div.appendChild(dot);\r\n\r\n        \r\n        let tri2 = document.createElement('div');\r\n        let dot2 = document.createElement('div');\r\n\r\n        props.pdot = dot2;\r\n\r\n        Object.assign(tri2.style,{\r\n            position:'absolute',\r\n            width: 0, \r\n            height: 0, \r\n            borderLeft: '5px solid transparent',\r\n            borderRight: '5px solid transparent',\r\n            borderBottom: '15px solid rgba(50,50,50,0.8)',\r\n            transform:'rotate(-210deg)',\r\n            left:this.parentNode.props.px_per_meter*props.radius*1.4+'px',\r\n            top:`${this.parentNode.props.px_per_meter*props.radius*1.6}px`\r\n        });\r\n\r\n        Object.assign(dot2.style,{\r\n            position:'absolute',\r\n            width: '6px', \r\n            height: '6px', \r\n            borderRadius:'3px',\r\n            backgroundColor:'darkred',\r\n            left:this.parentNode.props.px_per_meter*props.radius*1.54+'px',\r\n            top:`${this.parentNode.props.px_per_meter*props.radius*1.87}px`\r\n        })\r\n\r\n        div.appendChild(tri2);\r\n        div.appendChild(dot2);\r\n\r\n        \r\n        let pysocketdiv = document.createElement('socket-');\r\n\r\n        pysocketdiv.props.host = settings.host;\r\n        pysocketdiv.props.port = settings.port;\r\n\r\n        div.appendChild(pysocketdiv);\r\n\r\n        props.pysocket=this.querySelector('socket-');\r\n\r\n        let socket = props.pysocket.props.ws;\r\n\r\n        let earth = document.querySelector('planet-earth');\r\n\r\n\r\n        if( socket ) {\r\n            socket.addEventListener('open', () => {\r\n                dot2.style.backgroundColor = 'cyan';\r\n                setTimeout(()=>{\r\n                    if(!props.pysocket_closed) dot2.style.backgroundColor = 'darkblue';\r\n                },500);\r\n            });\r\n\r\n            socket.addEventListener('close', () => {\r\n                this.transmittingPyToNode = false;\r\n                dot2.style.backgroundColor = 'darkred';\r\n                if(earth) {\r\n                    earth.props.npdot.style.backgroundColor = 'darkred';\r\n                }\r\n                props.pysocket_closed = true;\r\n            });\r\n\r\n            socket.addEventListener('message',(ev)=>{\r\n                if(!this.transmittingPyToNode) this.transmittingPyToNode = true;\r\n                dot2.style.backgroundColor = 'cyan';\r\n                if(earth) {\r\n                    earth.props.npdot.style.backgroundColor = 'cyan';\r\n                }\r\n                setTimeout(()=>{\r\n                    if(this.transmittingPyToNode) {\r\n                        if(!props.pysocket_closed) dot2.style.backgroundColor = 'darkblue';\r\n                        if(earth) {\r\n                            earth.props.npdot.style.backgroundColor = 'darkblue';\r\n                        }\r\n                    }\r\n                },500);\r\n            });\r\n\r\n            socket.onmessage = async (event) => {\r\n                let ts = new Date(Date.now());\r\n                let tsm = ts.getHours()+':'+ts.getMinutes()+':'+ts.getSeconds();\r\n        \r\n                let msg = event.data;\r\n        \r\n                if(event.data.constructor.name === 'Blob') msg = await event.data.text();\r\n        \r\n                let message = `${tsm}:: ${settings.host}:${settings.port} received:\\n ${msg}`; //we can request from port 8000 or port 7001\r\n                let template = `<tr><td style='color:cyan;'>${message}</tr></td>`;\r\n        \r\n                if(props.pysocket.props.logger) props.pysocket.props.logger.props.log(message,template);\r\n                else console.log(message);\r\n            }\r\n        }\r\n\r\n        div.onclick = (e) => {\r\n            this.nClicks++;\r\n            if(this.nClicks === 1) {\r\n                //make the beacon appear and start beaming messages\r\n\r\n                //subscribe to sse\r\n                let socketdiv = document.createElement('socket-');\r\n\r\n                // if(settings.protocol === 'http') socketdiv.props.protocol = 'wss';\r\n                // else socketdiv.props.protocol = 'ws';\r\n                socketdiv.props.host = settings.host;\r\n                socketdiv.props.port = settings.python_node; \r\n\r\n                div.appendChild(socketdiv);\r\n\r\n                props.socket=this.querySelectorAll('socket-')[1];\r\n\r\n                if(props.socket.props.ws) {\r\n                    props.socket.props.ws.addEventListener('message',(ev)=>{\r\n                        if(!this.transmittingWS) this.transmittingWS = true;\r\n                        dot.style.backgroundColor = 'lightgreen';\r\n                        if(earth) {\r\n                            earth.props.ndot.style.backgroundColor = 'lightgreen';\r\n                        }\r\n                        setTimeout(()=>{\r\n                            if(this.transmittingWS) {\r\n                                if(props.socket) dot.style.backgroundColor = 'darkgreen';\r\n                                if(earth) {\r\n                                    earth.props.ndot.style.backgroundColor = 'darkgreen';\r\n                                }\r\n                            }\r\n                        },500);\r\n                    });\r\n\r\n                    \r\n                    props.socket.props.ws.addEventListener('close', ()=>{\r\n                        this.transmittingWS = false;\r\n                         //close the beacon\r\n                        dot.style.backgroundColor = 'darkred';\r\n                        if(earth) {\r\n                            earth.props.ndot.style.backgroundColor = 'darkred';\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //do things on frontend\r\n                //do things on frontend\r\n            }\r\n            else if (this.nClicks === 2) {\r\n                //open a description popup with\r\n                //   links and stuff\r\n                let pwindow = document.createElement('portfolio-window');\r\n                \r\n                pwindow.props.innerTemplate = component;\r\n\r\n                document.body.appendChild(pwindow);\r\n                let windows = document.querySelectorAll('portfolio-window'); \r\n                props.pwindow = windows[windows.length-1];\r\n            }\r\n            else {\r\n                //close the beacon\r\n                dot.style.backgroundColor = 'darkred';\r\n                if(earth) {\r\n                    earth.props.ndot.style.backgroundColor = 'darkred';\r\n                }\r\n                this.nClicks = 0;\r\n                if(props.socket) props.socket.delete();\r\n                this.transmittingWS = false;\r\n                props.socket = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    ondelete = (props=this.props) => {\r\n        if(props.socket) props.socket.delete();\r\n        if(props.pysocket) props.pysocket.delete();\r\n        props.pysocket = undefined;\r\n    }\r\n}\r\n\r\nPlanetNodeJS.addElement('planet-nodejs');", "import { PhysicsBodyNode } from \"../physicsbody.node\";\r\nimport '../../popups/planet_tag'\r\n\r\nlet component = require('./planet.maker.html');\r\n\r\nexport class PlanetMaker extends PhysicsBodyNode {\r\n\r\n    nClicks=false;\r\n\r\n    oncreate=(props)=>{\r\n        let div = this.querySelector('div');\r\n        \r\n        this.props.div = div;\r\n\r\n        let img = this.querySelector('img');\r\n        if(img) img.className='saturate';\r\n\r\n        div.onclick = (e) => {\r\n            this.nClicks++;\r\n            if(this.nClicks === 1) {\r\n                //create a data stream from a device, heg or eeg\r\n                //  or audio if unavailable\r\n\r\n                //do things on frontend\r\n            }\r\n            else if (this.nClicks === 2) {\r\n                //open a description popup with\r\n                //   links and stuff\r\n                let pwindow = document.createElement('portfolio-window');\r\n                \r\n                pwindow.props.innerTemplate = component;\r\n\r\n                document.body.appendChild(pwindow);\r\n                let windows = document.querySelectorAll('portfolio-window'); \r\n                props.pwindow = windows[windows.length-1];\r\n            }\r\n            else {\r\n                //close the data stream\r\n                \r\n                this.nClicks = 0;\r\n            }\r\n        }\r\n\r\n        div.onmouseover = (ev) => {\r\n            //add tag\r\n            props.ptag = document.createElement('planet-tag');\r\n            props.ptag.props.tag = 'Maker';\r\n            div.appendChild(props.ptag);\r\n        }\r\n        \r\n        div.onmouseout = (ev) => {\r\n            props.ptag.delete();\r\n        }\r\n    }\r\n}\r\n\r\nPlanetMaker.addElement('planet-maker');", "\r\nimport {DOMElement} from 'fragelement';\r\n\r\nlet component = require('./portfolio_window.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class PortfolioWindow extends DOMElement {\r\n    props={\r\n        innerTemplate:''\r\n    } //can specify properties of the element which can be subscribed to for changes.\r\n    \r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    clickedOut=(ev)=>{\r\n        this.props.div.classList.remove('window-wipe-enter');\r\n        this.props.div.classList.add('window-wipe-exit');\r\n        setTimeout(() => {\r\n            this.delete()\r\n        },1000);\r\n    }\r\n\r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        //set up the business logic for the component\r\n        \r\n        let div = this.querySelector('div');\r\n\r\n        props.div = div;\r\n\r\n        div.insertAdjacentHTML('beforeend',props.innerTemplate);\r\n\r\n        let c = document.querySelector('canvas');\r\n        if(c) \r\n            c.addEventListener('click',this.clickedOut);\r\n\r\n        // let button = this.querySelector('button');\r\n        // if(button) button.onclick = (ev)=>{\r\n        //     div.innerHTML = 'Clicked!'\r\n        // };\r\n    }\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    ondelete=(props)=>{\r\n        let c = document.querySelector('canvas');\r\n        if(c) \r\n            c.removeEventListener('click',this.clickedOut);\r\n    } //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nPortfolioWindow.addElement('portfolio-window');\r\n", "import { PhysicsBodyNode } from \"../physicsbody.node\";\r\nimport '../../popups/planet_tag'\r\nimport '../../popups/portfolio_window'\r\n\r\nlet component = require('./planet.javascript.html');\r\n\r\nexport class PlanetJavascript extends PhysicsBodyNode {\r\n\r\n    nClicks=false;\r\n\r\n    oncreate=(props)=>{\r\n        let div = this.querySelector('div');\r\n\r\n        this.props.div = div;\r\n\r\n        div.onclick = (e) => {\r\n            this.nClicks++;\r\n            if(this.nClicks === 1) {\r\n                //make a cool thing happen\r\n            }\r\n            else if (this.nClicks === 2) {\r\n                //open a description popup with\r\n                //   links and stuff\r\n                let pwindow = document.createElement('portfolio-window');\r\n                \r\n                pwindow.props.innerTemplate = component;\r\n\r\n                document.body.appendChild(pwindow);\r\n                let windows = document.querySelectorAll('portfolio-window'); \r\n                props.pwindow = windows[windows.length-1];\r\n            }\r\n            else {\r\n                //close the beacon\r\n                this.nClicks = 0;\r\n            }\r\n        }\r\n\r\n        div.onmouseover = (ev) => {\r\n            //add tag\r\n            props.ptag = document.createElement('planet-tag');\r\n            props.ptag.props.tag = 'Javascript';\r\n            div.appendChild(props.ptag);\r\n        }\r\n        \r\n        div.onmouseout = (ev) => {\r\n            props.ptag.delete();\r\n        }\r\n    }\r\n}\r\n\r\nPlanetJavascript.addElement('planet-javascript');", "import { PhysicsBodyNode } from \"../physicsbody.node\";\r\nimport '../../popups/planet_tag'\r\n\r\n\r\nlet component = require('./planet.startup.html');\r\n\r\nexport class PlanetStartup extends PhysicsBodyNode {\r\n\r\n    nClicks=false;\r\n\r\n    oncreate=(props)=>{\r\n        let div = this.querySelector('div');\r\n\r\n        this.props.div = div;\r\n\r\n        div.onmouseover = (ev) => {\r\n            //add tag\r\n            props.ptag = document.createElement('planet-tag');\r\n            props.ptag.props.tag = 'Startups';\r\n            div.appendChild(props.ptag);\r\n        }\r\n        \r\n        div.onmouseout = (ev) => {\r\n            props.ptag.delete();\r\n        }\r\n\r\n        div.onclick = (e) => {\r\n            this.nClicks++;\r\n            if(this.nClicks === 1) {\r\n                //launch a rocket??? (another physics body)\r\n            }\r\n            else if (this.nClicks === 2) {\r\n                //open a description popup with\r\n                //   links and stuff\r\n                let pwindow = document.createElement('portfolio-window');\r\n                \r\n                pwindow.props.innerTemplate = component;\r\n\r\n                document.body.appendChild(pwindow);\r\n                let windows = document.querySelectorAll('portfolio-window'); \r\n                props.pwindow = windows[windows.length-1];\r\n            }\r\n            else {\r\n                //close the beacon\r\n                \r\n                this.nClicks = 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nPlanetStartup.addElement('planet-startup');", "\r\nimport {DOMElement} from 'fragelement';\r\n\r\nlet component = require('./topnav.component.html');\r\n\r\nlet aboutt = require('./about.component.html');\r\n\r\n//See: https://github.com/brainsatplay/domelement\r\nexport class TopNav extends DOMElement {\r\n    props={} //can specify properties of the element which can be subscribed to for changes.\r\n    \r\n    //set the template string or function (which can input props to return a modified string)\r\n    template=component;\r\n\r\n    //DOMElement custom callbacks:\r\n    oncreate=(props)=>{\r\n        //set up the business logic for the component\r\n        \r\n        let divs = this.querySelectorAll('span');\r\n\r\n        let about = divs[1];\r\n        let me = divs[2];\r\n\r\n        let onclick = (ev) => {\r\n            let pwindow = document.createElement('portfolio-window');\r\n            pwindow.props.innerTemplate = aboutt;\r\n            document.body.appendChild(pwindow);\r\n            about.onclick = (ev) => {\r\n                let win = document.getElementsByTagName('portfolio-window')[0];\r\n                if(win) {\r\n                    pwindow.clickedOut();\r\n                    about.onclick = onclick;\r\n                } else {\r\n                    onclick();\r\n                }\r\n            }\r\n        }\r\n\r\n        about.onclick = onclick;\r\n\r\n        me.onclick = (ev) => {\r\n            window.open(\r\n                \"https://github.com/moothyknight\", \"_blank\");\r\n        }\r\n        \r\n    }\r\n    //onresize=(props)=>{} //on window resize\r\n    //onchanged=(props)=>{} //on props changed\r\n    //ondelete=(props)=>{} //on element deleted. Can remove with this.delete() which runs cleanup functions\r\n}\r\n\r\n//window.customElements.define('custom-', Custom);\r\n\r\nTopNav.addElement('top-nav');\r\n"],
  "mappings": "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",
  "names": []
}
